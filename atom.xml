<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Gosuke Miyashita]]></title>
  <link href="https://mizzy.org/atom.xml" rel="self"/>
  <link href="https://mizzy.org/"/>
  <updated>2020-04-19T23:00:00+09:00</updated>
  <id>https://mizzy.org/</id>
  <author>
    <name><![CDATA[Gosuke Miyashita]]></name>
    
  </author>
  <generator uri="https://github.com/mizzy/stellar/">Stellar</generator>


  <entry>
    <title type="html"><![CDATA[言語を問わないサーバインフラ管理用汎用コマンド実行フレームワークの提案と実装 (WSA研#6予稿)]]></title>
    <link href="https://mizzy.org/blog/2020/04/19/1/" />
    <updated>2020-04-19T23:00:00+09:00</updated>
    <id>https://mizzy.org/blog/2020/04/19/1/</id>
    <content type="html"><![CDATA[
<p>このエントリは<a href="https://websystemarchitecture.hatenablog.jp/entry/2019/12/11/165624">第6回Web System Architecture研究会</a>の予稿です。</p>

<hr>

<h2>はじめに</h2>

<p><a href="http://id.nii.ac.jp/1001/00204179/">Serverspec：宣言的記述でサーバの設定状態をテスト可能な汎用性の高いテストフレームワーク</a>では、従来手法を補うための要件を考察し、要件を満たすために以下の様にテストフレームワークを2つに分割する手法を提案した。</p>

<ul>
<li>汎用コマンド実行フレームワーク

<ul>
<li>運用業務で発生するコマンド群、特に確認業務に必要なコマンド群の体系化・抽象化を行う</li>
</ul></li>
<li>制御テストフレームワーク

<ul>
<li>汎用コマンド実行フレームワークを宣言的な記法で操作する</li>
</ul></li>
</ul>

<p>そして、提案手法に基づき実装した汎用コマンド実行フレームワークをSpecinfra、制御テストフレームワークをServerspecと名付けた。</p>

<p>Specinfraを利用したより優れたテストフレームワーク実装の登場や、確認業務以外の運用業務に必要なコマンド群を体系化することによるテストフレームワーク以外への応用、例えば構成管理ツールへの応用も期待し、いくつかの実装も登場したが、Specinfraは期待したほど広く利用されていない。</p>

<p>本予稿では、Specinfraが期待ほど利用されていない要因について考察し、解決するための手法と実装について述べる。</p>

<hr>

<h2>現状の課題</h2>

<p>サーバ管理系ツールを実装する場合、多くの環境をサポートしようとすると、以下の2つ違いについて考慮し、ツール内で違いを吸収するための抽象化を行うのが一般的である。</p>

<ul>
<li>サーバの操作や情報を取得するための方法の違い

<ul>
<li>例えばパッケージ管理系の操作の場合、RedHat系であればyumやrpmコマンド、Debian系であればapt-getやdpkgコマンド、といった違いがOSやディストリビューション毎にある。</li>
</ul></li>
<li>サーバ操作や情報取得の実行形式の違い

<ul>
<li>コマンドを実行する際に、サーバ上で直接コマンドを実行するのか、SSH経由で実行するのか、Docker API経由で実行するのか、などの違い。</li>
</ul></li>
</ul>

<p>Chef, Puppet, Ansible, Itamae(Specinfra)といった似たような目的を持つサーバ構成管理ツールは、OS/ディストリビューションや実行形式の抽象化をそれぞれ独自に実装している。</p>

<p>Specinfra開発の狙いは、各サーバ管理ツールで独自に実装している抽象化部分をライブラリに切り出すことによって、ツール本体の実装の手間を省き、手軽に実装できるようにすることにある。</p>

<p>しかし、再利用性を考慮して開発したSpecinfraはそれほど広く使われていない。</p>

<hr>

<h2>課題を解決するための手法と実装</h2>

<p>再利用性を考慮して開発したSpecinfraがそれほど広く利用されていない理由のひとつは、SpecinfraがRuby製であるため、Ruby以外のプロジェクトでは採用できない、ということである。</p>

<p>この課題を解決するための手法として、OS/ディストリビューションの抽象化や実行形式の抽象化を行うためのライブラリを、SpecinfraのようなRubyGemではなく、様々な言語からも利用できる共有ライブラリという形で提供する。</p>

<p>そのための実装を<a href="https://github.com/libspecinfra">libspecinfra</a>と名付けた。libspecinfraはさらに以下の実装に分類される。</p>

<ol>
<li>共有ライブラリを提供するSpecinfra本体</li>
<li>Specinfra本体が提供する共有ライブラリを呼び出すための各言語用バインディング</li>
</ol>

<p>1は実装途中だが、現在開発を停止している。SpecinfraをRustで再実装する形で実装しているが、名前は敢えて変えずにSpecinfraとしている。</p>

<p>2はRuby, mruby, Python用バインディングが存在するが、こちらも現在開発は停止している。</p>

<p>GitHub上のlibspecinfra Organizationにある<a href="https://github.com/libspecinfra/examples">examples</a>リポジトリにはRuby, mruby, Rustのサンプルコードがある。</p>

<hr>

<h2>本研究を進めるにあたっての検討事項</h2>

<p>PuppetやChefやServerspecについて、話題にのぼることが少なくなっている。これはコンテナが広く使われるようになり、サーバの構成管理とテストのあり方が変わってきているためである。コンテナイメージの作成は、従来のサーバプロビジョニングと比較して簡素なため、サーバ構成管理ツールの重要性が低下し、それに伴いテストの重要性も低下している。</p>

<p>とはいえ、従来のようなサーバプロビジョニングがなくなったわけではなく、コンテナのプロビジョニングとコンテナ実行基盤のプロビジョニング、2つのレイヤーに分離された、と考えることができる。</p>

<p>libspecinfraの適用領域はコンテナ実行基盤のプロビジョニングであると考えている。しかしその領域において、libspecinfraのような抽象度の高さは本当に必要なのか、コンテナ実行基盤のプロビジョニング以外にも応用できる領域がないか、等について検討する必要がある。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[フリーランスになって6年が経った]]></title>
    <link href="https://mizzy.org/blog/2020/04/01/1/" />
    <updated>2020-04-01T13:00:00+09:00</updated>
    <id>https://mizzy.org/blog/2020/04/01/1/</id>
    <content type="html"><![CDATA[
<p>会社勤めしていないと、評価制度というものがなく、自分がやったことをまとめる機会もないので、今年も軽くまとめエントリを書いておく。</p>

<p><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">フリーランス情報、表に色々出てくるのはとても良いんだけど、本当に人によって様々なので、色々な情報見比べた方が良い、と思ったので、リンク集的なものをつくってる。 <a href="https://t.co/GJ0HdI4LEC"><a href="https://t.co/GJ0HdI4LEC">https://t.co/GJ0HdI4LEC</a></a></p>&mdash; Gosuke Miyashita (mizzy) (@gosukenator) <a href="https://twitter.com/gosukenator/status/1136512882198237184?ref_src=twsrc%5Etfw">June 6, 2019</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script></p>

<p>放置してアップデートしてないなこれ…</p>

<hr>

<h2>仕事について</h2>

<p><a href="https://mizzy.org/blog/2019/04/01/1/">昨年の振り返りエントリ</a> からの変更点としては、<a href="https://corp.toreta.in/">トレタ</a> さんとは契約終了となった。2年間ありがとうございました。</p>

<p><a href="http://www.recruit-mp.co.jp/">リクルートマーケティングパートナーズ</a> さん、<a href="https://www.talentio.co.jp/">タレンティオ</a> さん、<a href="https://aktsk.jp/">アカツキ</a> さん、某社さん、<a href="https://research.sakura.ad.jp/">さくらインターネット研究所</a> さん、の5社の仕事は現在も継続中。</p>

<p>「某社」さん、昨年の時点では名前を出すのはNGなので伏せていたけど、今年は出して良い、むしろ積極的に出して欲しい、と言われたので明かすと、<a href="https://www.honda.co.jp/EG/">ホンダエンジニアリング</a> さんです。</p>

<p><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">現在、ホンダエンジニアリングさんとお仕事していて、第4世代LETというシステムを開発するお手伝いをしてます。AWSチョットデキル人とフロントエンドチョットデキル人探してるので、興味ある方、お声がけください。社員でもフリーランスでも。</p>&mdash; Gosuke Miyashita (mizzy) (@gosukenator) <a href="https://twitter.com/gosukenator/status/1177055880090505216?ref_src=twsrc%5Etfw">September 26, 2019</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script></p>

<p>AWSやフロントエンドに限らず、良い人がいればいつでも是非、という感じなので、興味ある方はご連絡ください。</p>

<p>仕事絡みのアウトプットとしては、最近 <a href="https://github.com/aktsk/bqnotify">bqnotify</a> という、BigQueryにクエリを投げて結果をSlackに通知するシンプルなツールを、アカツキさんの仕事でつくってます。</p>

<p>また、さくらインターネット研究所さんの仕事として書いた <a href="http://id.nii.ac.jp/1001/00204179/">Serverspec 論文</a> が情報処理学会論文誌ジャーナルに採録されました。</p>

<p>仕事面での大きな変化は、さくらインターネット研究所さんの仕事絡みで出張が増えたこと。フリーになってから5年ぐらいはほとんど出張がなく、年に1回あるかないか、ぐらいだったのが、この1年で福岡、石狩、松江、大阪、京都、ポートランド、デービス、ブリュッセルに行っている。特に福岡は5，6回行っている。福岡に行くことが多いのは、さくらインターネットさんのオフィスが福岡にあるのと、研究所に誘ってくださった <a href="https://twitter.com/matsumotory">@matsumotory</a> さんがいらっしゃるからなんだけど、考えてみるとブリュッセル以外は全部、まつもとりーさんと現地でお会いしたり、一緒に行ったりしている。</p>

<p>ただ、COVID-19の影響で、3月は <a href="https://www.ipsj.or.jp/kenkyukai/event/iot48.html">第48回IOT研究発表会</a> で名古屋、<a href="https://www.ipsj.or.jp/event/taikai/82/">情報処理学会第82回全国大会</a> で金沢に行く予定だったのが、どちらもオンライン開催になったり、7月にマドリードで行われる予定だった <a href="https://ieeecompsac.computer.org/2020/">COMPSAC 2020</a> もオンライン開催になったりで、今後しばらく出張はなさそう。</p>

<p><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">海外出張の機会が増えそうだからとアメックスプラチナつくったらこの有様。</p>&mdash; Gosuke Miyashita (mizzy) (@gosukenator) <a href="https://twitter.com/gosukenator/status/1244970463735865349?ref_src=twsrc%5Etfw">March 31, 2020</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script></p>

<hr>

<h2>売上について</h2>

<p>一昨年と比較すると、昨年は一緒にお仕事する会社が増えたので、その分売上も増えた。出張が増えたのと、時間を有効活用するためにタクシーやUberを利用することが増えたので、売上が増えた分は旅費交通費にほとんど回っているような感じ。</p>

<p>今年は一社減ったけど、浮いた時間分、ホンダエンジニアリングさんの仕事時間を増やしたので、今のところ昨年と同じぐらいの売上になる見通し。</p>

<p>具体的な金額については、個人法人含めて <a href="https://note.mu/mizzy/n/n09a1477891ac">hXXsyotoku.pdfを公開する｜mizzy｜note</a> という有料noteに書いている。法人の売上高はざっくりした金額しか書いてないけど。</p>

<hr>

<h2>今後について</h2>

<p>今の自分の肩書きは「フリーのソフトウェアエンジニア兼研究者」だと思っているけど、ソフトウェアエンジニアとしての実績と比較して、研究者としての実績は圧倒的に足りない。なので、研究者としての実績を積み上げていきたい。</p>

<hr>

<h2>関連エントリ</h2>

<ul>
<li><a href="https://mizzy.org/blog/2019/04/01/1/">フリーランスになって5年が経った - Gosuke Miyashita</a></li>
<li><a href="https://mizzy.org/blog/2018/04/02/1/">フリーランスになって4年が経った - Gosuke Miyashita</a></li>
<li><a href="http://mizzy.org/blog/2017/04/01/1/">フリーランスになって3年が経った - Gosuke Miyashita</a></li>
<li><a href="http://mizzy.org/blog/2016/04/01/1/">フリーランスになって2年が経った - Gosuke Miyashita</a></li>
<li><a href="http://mizzy.org/blog/2015/04/01/1/">フリーランスになって1年が経った - Gosuke Miyashita</a></li>
</ul>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[フリーランスになって5年が経った]]></title>
    <link href="https://mizzy.org/blog/2019/04/01/1/" />
    <updated>2019-04-01T12:00:00+09:00</updated>
    <id>https://mizzy.org/blog/2019/04/01/1/</id>
    <content type="html"><![CDATA[
<blockquote class="twitter-tweet" data-lang="en"><p lang="ja" dir="ltr">世の中のフリーランス云々の話、フリーランス＝個人事業主派と、フリーランス＝働き方の一形態（個人か法人かは問わない）派にざっくり2分されていて、税金や社会保険の話になると、どちらの立場をとるかによって話が違ってかみ合わないのでややこしい。</p>&mdash; Gosuke Miyashita (mizzy) (@gosukenator) <a href="https://twitter.com/gosukenator/status/1041259113965998080?ref_src=twsrc%5Etfw">September 16, 2018</a></blockquote>

<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<blockquote class="twitter-tweet" data-conversation="none" data-lang="en"><p lang="ja" dir="ltr">自分は後者の、働き方による区分派。個人事業主か法人かは、税制上の区分であって、働き方とは関係ないので。</p>&mdash; Gosuke Miyashita (mizzy) (@gosukenator) <a href="https://twitter.com/gosukenator/status/1041259115492700160?ref_src=twsrc%5Etfw">September 16, 2018</a></blockquote>

<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>というわけで、自分は法人化してるフリーランスだと認識している。</p>

<hr>

<h2>仕事について</h2>

<p><a href="https://mizzy.org/blog/2018/04/02/1/">昨年の振り返りエントリ</a> で書いた、<a href="http://www.recruit-mp.co.jp/">リクルートマーケティングパートナーズ</a>、<a href="https://www.talentio.co.jp/">タレンティオ</a>、<a href="https://corp.toreta.in/">トレタ</a>、<a href="https://aktsk.jp/">アカツキ</a> の4社の仕事は現在も継続中で、今年から新たに某社と <a href="https://research.sakura.ad.jp/">さくらインターネット研究所</a> の仕事もしている。なので、現在は6社と契約していることになる。</p>

<p>Ref: <a href="https://mizzy.org/blog/2019/03/01/1/">さくらインターネット研究所の客員研究員になった</a></p>

<p>「Openness is our driver for excellence」という言葉を <a href="https://www.youtube.com/watch?v=wxUxFdFxd0Y">YAPC::Asia Tokyo 2012 クロージングキーノート</a> や <a href="https://geek-out.jp/column/entry/2018/03/08/110000">オープンさは私のキャリアの原動力 ─ SIer、Web系、フリーランスという変遷で実感した「オープンにすること」の大切さ - GeekOutコラム</a> といったコラムなんかで紹介しているが、この言葉は自分の行動原理を構成するとても重要なパーツのひとつ。なので、フリーランスとしての仕事でやったことも、できる限りオープンにするようにしていて、会社の技術ブログに記事を書かせてもらったり、GitHubでソースを公開したりしている。</p>

<ul>
<li><a href="https://tech.recruit-mp.co.jp/infrastructure/post-16701/">Spinnakerのコードを手元で修正して動作確認する方法(その1) – PSYENCE:MEDIA</a></li>
<li><a href="https://tech.recruit-mp.co.jp/infrastructure/post-17064/">Spinnakerのコードを手元で修正して動作確認する方法(その2) – PSYENCE:MEDIA</a></li>
<li><a href="https://hackerslab.aktsk.jp/2019/02/06/120014">Go用HTTP APIテストコードジェネレータを開発しているというお話 - Akatsuki Hackers Lab | 株式会社アカツキ（Akatsuki Inc.)</a></li>
<li><a href="https://github.com/aktsk/atgen">aktsk/atgen</a></li>
</ul>

<p>特に、さくらインターネット研究所の仕事は、アウトプットすることそのものがミッションとも言えるので、3月から始めたばかりの仕事だけど、早速ひとつアウトプットしてみた。</p>

<ul>
<li><a href="https://research.sakura.ad.jp/2019/03/29/hosting-casual-talks/">Hosting Casual Talks #5でコンテナランタイムや分散クエリキャッシングの発表をしました – さくらインターネット研究所</a></li>
</ul>

<hr>

<h2>収入について</h2>

<p>昨年の振り返りエントリで、「法人個人問わず事業全体の売上で言えば、2年目以降は割と安定している。今年も同じぐらいの売上になりそう」と書いていたが、実際その通りになった。今年は少し増えそう。具体的な金額については、個人法人含めて <a href="https://note.mu/mizzy/n/n09a1477891ac">hXXsyotoku.pdfを公開する｜mizzy｜note</a> という有料noteに書いた。法人の売上高はざっくりした金額しか書いてないけど。</p>

<hr>

<h2>大学について</h2>

<p>7年かけて大学を卒業した。フリーランスになってからは、大学の授業をこなす時間を作りやすくなったような気がする（Serverspec本執筆時は除く）。</p>

<blockquote class="twitter-tweet" data-lang="en"><p lang="ja" dir="ltr">学位を授与された <a href="https://t.co/xLrwjJHeQQ">pic.twitter.com/xLrwjJHeQQ</a></p>&mdash; Gosuke Miyashita (mizzy) (@gosukenator) <a href="https://twitter.com/gosukenator/status/1112313582186725376?ref_src=twsrc%5Etfw">March 31, 2019</a></blockquote>

<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>入学時と卒業時に書いたエントリはこちら。</p>

<ul>
<li><a href="https://mizzy.org/blog/2012/04/14/1/">37歳で大学生になりました - Gosuke Miyashita</a></li>
<li><a href="https://mizzy.org/blog/2019/03/15/1/">44歳で大学を卒業しました - Gosuke Miyashita</a></li>
</ul>

<hr>

<h2>まとめ</h2>

<p>フリーランスになった時に、10年ぐらいはこの働き方を続けたい、と思ったが、とりあえず目標の半分までは到達することができた。みなさんありがとうございます。</p>

<hr>

<h2>関連エントリ</h2>

<ul>
<li><a href="https://mizzy.org/blog/2018/04/02/1/">フリーランスになって4年が経った - Gosuke Miyashita</a></li>
<li><a href="http://mizzy.org/blog/2017/04/01/1/">フリーランスになって3年が経った - Gosuke Miyashita</a></li>
<li><a href="http://mizzy.org/blog/2016/04/01/1/">フリーランスになって2年が経った - Gosuke Miyashita</a></li>
<li><a href="http://mizzy.org/blog/2015/04/01/1/">フリーランスになって1年が経った - Gosuke Miyashita</a></li>
</ul>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[44歳で大学を卒業しました]]></title>
    <link href="https://mizzy.org/blog/2019/03/15/1/" />
    <updated>2019-03-15T12:00:00+09:00</updated>
    <id>https://mizzy.org/blog/2019/03/15/1/</id>
    <content type="html"><![CDATA[
<blockquote class="twitter-tweet" data-lang="en"><p lang="ja" dir="ltr">大学卒業が確定した <a href="https://t.co/wEEXoUpCcY">pic.twitter.com/wEEXoUpCcY</a></p>&mdash; Gosuke Miyashita (mizzy) (@gosukenator) <a href="https://twitter.com/gosukenator/status/1105727807760424960?ref_src=twsrc%5Etfw">March 13, 2019</a></blockquote>

<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>以前 <a href="/blog/2012/04/14/1/">37歳で大学生になりました</a> というエントリを書きましたが、7年かかってようやく卒業しました。在籍できる期間は最長8年間だけど、2年次から編入という形で入学したので、卒業できてもできなくても、今年度が最後でした。</p>

<p>仕事しながらの大学生活がどんな感じだったのか、振り返ってみたいと思います。</p>

<hr>

<h2>授業や単位について</h2>

<p>授業は以下の3つの形態になっています。</p>

<ul>
<li>スクーリング

<ul>
<li>実際にキャンパスに行って、2日あるいは3日間丸々授業を受ける形態。最終日は科目修得試験を受け、試験に合格できれば単位認定。</li>
</ul></li>
<li>テキスト

<ul>
<li>LMS(学習管理サイト)にあるサブテキストと、指定された教科書を読みながら学習を進めていく形態の授業。サブテキストは15章に分かれている。レポートを2回提出する必要があり、合格すれば科目修得試験が受けられる。科目修得試験に合格すれば単位認定。</li>
</ul></li>
<li>メディア

<ul>
<li>LMS上で学習を進めていく形態の授業。指定の教科書も併用する。授業によって多少異なるが、全部で15回に分かれていて、毎回選択式の小テストを受ける。小テストの合計点が基準を満たせば科目修得試験が受けられる。科目修得試験に合格すれば単位認定。小テスト以外にレポートが必要な授業もある。</li>
</ul></li>
</ul>

<p>卒業には124単位必要で、自分は以前卒業した大学の32単位を持ち越すことができたので、実際には92単位を取得する必要がありました。</p>

<p>授業の具体的な内容は、以下のページから見ることができます。</p>

<ul>
<li><a href="https://www.e-campus.gr.jp/syllabus/current/st/cr_sy/1116_.htm">帝京大学Web講義概要 理工学部 情報科学科（通信課程）（Ⅰ・Ⅲ）</a></li>
<li><a href="https://www.e-campus.gr.jp/syllabus/current/st/cr_sy/1117_.htm">帝京大学Web講義概要 理工学部 情報科学科（通信課程）（Ⅱ・Ⅳ）</a></li>
</ul>

<hr>

<h2>仕事しながら授業をこなすことについて</h2>

<p>最短で卒業することを想定した、年間辺りの単位取得数モデルケースは、1年次32単位、2年次32単位、3年次30単位、4年次30単位、となります。</p>

<p>また、授業開始は4月中旬ぐらいからで、Ⅳ期のレポート締切が1月初旬なので、授業をこなすのにあてられる期間は、1年間のうち実質的には9ヶ月ほどしかありません。</p>

<p>で、32単位取得しようとすると、16科目受ける必要があるので、大体1ヶ月に2科目こなす必要があります。テキスト授業やメディア授業は1科目が15章に分割されているので、1日に1章こなせば、最短で卒業できる計算になります。といっても、必ずしも毎日授業をこなせるわけではないですし、レポートを書くための時間も必要なので、1日1章だと時間が足りなくなります。</p>

<p>1年目は32単位取得できたのですが、なかなか大変でした。平日は朝会社についてから始業時間までの30分、昼休みの1時間、家に帰ってから1,2時間、といった感じで授業に時間を割いていました。土日も2，3時間は授業をこなすのに割り当ててました。また、出張先のホテルで授業をこなしたり、年末年始関係なくレポートを書いたりもしてました。</p>

<blockquote class="twitter-tweet" data-lang="en"><p lang="ja" dir="ltr">微分方程式でロケットの最大速度と到達高度を計算してる。(大学の応用数学課題レポートです。)</p>&mdash; Gosuke Miyashita (mizzy) (@gosukenator) <a href="https://twitter.com/gosukenator/status/285342379853103105?ref_src=twsrc%5Etfw">December 30, 2012</a></blockquote>

<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<blockquote class="twitter-tweet" data-lang="en"><p lang="ja" dir="ltr">ロケットの高度計算の積分やってたら年明けてた。おめでとうございます。</p>&mdash; Gosuke Miyashita (mizzy) (@gosukenator) <a href="https://twitter.com/gosukenator/status/285762809831227392?ref_src=twsrc%5Etfw">December 31, 2012</a></blockquote>

<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>本業があまり忙しくなく、残業がほとんどなければ、これぐらいのペースで授業をこなすことはできるのですが、本業が忙しくて残業が多くなったり、本業以外の仕事(自分の場合は雑誌や本の執筆)が重なったりすると、並行して授業もこなすのはかなり厳しいですね。</p>

<p>勤め先が提供しているサービスで大き目のインシデントが発生した時は、リカバリ作業のヘルプで徹夜対応して、そのまま試験会場に向かう、なんてこともありました。</p>

<blockquote class="twitter-tweet" data-lang="en"><p lang="ja" dir="ltr">そうだ、、mizzyさん朝まで対応してから試験受けに行かれてた… <a href="https://twitter.com/hashtag/%E3%81%B6%E3%81%A4%E3%81%8B%E3%82%8A%E7%A8%BD%E5%8F%A4?src=hash&amp;ref_src=twsrc%5Etfw">#ぶつかり稽古</a></p>&mdash; Shinya Tsunematsu (@tnmt) <a href="https://twitter.com/tnmt/status/404151211110047744?ref_src=twsrc%5Etfw">November 23, 2013</a></blockquote>

<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>試験は無事合格しましたが、その後も事後処理などで忙しかったり、対応が終わって落ち着いたら一気に気が抜けたりで、この後はまったく授業が手につきませんでした。</p>

<p>また、<a href="https://www.oreilly.co.jp/books/9784873117096/">Serverspec 本</a> の執筆中も、授業どころではありませんでした。</p>

<p>こんな感じで、7年かかってなんとか必要な単位数を取得できました。</p>

<hr>

<h2>受講した科目と成績について</h2>

<p>以下が成績原簿です。「認定」と書かれてるのは、前の大学から持ち越して認定された単位です。</p>

<p><img src="/images/2019/03/result.jpg" alt=""></p>

<hr>

<h2>大変だったこと</h2>

<p>本業との兼ね合い以外だと、基本的には自学自習とあまり変わらないので、モチベーションの維持が一番大変でした。何度か途中で辞めようかな、と思ったこともありました。が、ここで辞めるとなんか負けた気がする、それは嫌だ、と思いながら何とか続けてこられました。</p>

<p>LMS(学習管理サイト)上に掲示板があり、そこで情報交換したり、実際に集まって勉強会をしたり、といったことも行われているようなので、モチベーション維持のためには、こういったものを活用すると良いかも知れません。</p>

<hr>

<h2>入学して良かったかどうか</h2>

<p>学ぶ内容は基礎的なことが多く、すぐ実践で役立つ、というものでもないので、これから仕事で役に立つかどうかはわかりません。</p>

<p>入学のモチベーションのひとつに、アメリカで仕事をしたい、そのためのビザ取得にはCS(Computer Science)の学位が必要だから、というのもあったのですが、今はアメリカに行く気はあまりないので、そのために学位を役立てる機会も今のところはなさそうです。</p>

<p>また、入学したときに書いたエントリに「情報工学や計算機科学なんかの学位を持ってない、といったことに、ほんの微か、あるかないかぐらいの、引け目なんだかコンプレックスだかなんだかわからないけど、そんなようなものをずっと持ち続けています。」とあります。これは今考えてみると、今後ずっとIT技術者として生きていくための、確としたバックグラウンドが欲しい、ということだったのだと思います。そういった意味では、この大学で学んだことや、最後までやりきって卒業できたことは、自分を支える確かなバックグラウンドの一部になったと思います。</p>

<p>なので、入学して良かったかどうかで言えば、まあ良かったんじゃないかと思います。</p>

<hr>

<h2>今後の予定</h2>

<p>学士を取得した、となると、次は修士や博士、というのが自然な流れかな、でもまあすぐにではなく、ゆっくり考えよう、と思っていたら、ちょうどタイミング良く <a href="https://twitter.com/matsumotory">matsumotory</a> さんからお声がけいただき、<a href="https://mizzy.org/blog/2019/03/01/1/">さくらインターネット研究所の客員研究員</a> になりました。ここから論文博士への道もあるかな、と考えています。</p>

<p>また、<a href="https://k0kubun.hatenablog.com/entry/stanford-ndo">リモートでアメリカの大学院のCSの授業を取ってみた話 - k0kubun&#39;s blog</a> を読んで、こんな風に大学院で更に専門的な内容を学ぶのも良さそう、などと思っています。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[さくらインターネット研究所の客員研究員になった]]></title>
    <link href="https://mizzy.org/blog/2019/03/01/1/" />
    <updated>2019-03-01T13:00:00+09:00</updated>
    <id>https://mizzy.org/blog/2019/03/01/1/</id>
    <content type="html"><![CDATA[
<p>3月1日よりさくらインターネット研究所の客員研究員になりました。</p>

<p><a href="https://hb.matsumoto-r.jp/entry/2018/12/25/133835">分散型データセンターOSとリアクティブ性を持つコンテナ実行基盤技術のこれから - 人間とウェブの未来</a> を読んで、以下の様にツイートしたタイミングで、<a href="https://twitter.com/matsumotory">matsumotoryさん</a> から「一緒にさくらの研究所で研究開発しませんか？」と誘われたのがきっかけです。</p>

<blockquote class="twitter-tweet" data-lang="en"><p lang="ja" dir="ltr">さくらインターネット超おもしろそう ー 分散型データセンターOSとリアクティブ性を持つコンテナ実行基盤技術のこれから - 人間とウェブの未来 <a href="https://t.co/j8OWjEEyvt">https://t.co/j8OWjEEyvt</a></p>&mdash; Gosuke Miyashita (mizzy) (@gosukenator) <a href="https://twitter.com/gosukenator/status/1077785577863270400?ref_src=twsrc%5Etfw">December 26, 2018</a></blockquote>

<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>ちょうど、今年度で <a href="https://mizzy.org/blog/2012/04/14/1/">大学</a> を卒業予定で、次は修士や博士、というのも、選択肢になり得るかな、と考えていました。とは言え、すぐに具体的に動こう、と思っていたわけではなく、<a href="http://hyoshiok.hatenablog.com/entry/20180930/p1">hyoshiok さんのように定年退職後に大学院に入る</a> というのもありかな、ぐらいに、ぼんやりと検討していた程度。そんな感じで、研究者としてのキャリアについて漠然とながら考えていたところにタイミングよく声がかかったのと、それよりなにより、matsumotoryさんやさくらインターネット研究所の取り組みが、技術者としてとても面白そうなので、誘いを断る理由が一切ありませんでした。</p>

<p>先日、所長の鷲北さんが <a href="https://www.slideshare.net/kenwashikita/research-and-development-review-of-ken-washikita-201902">わしきたのこれまでの研究 開発と振り返り（2019年2月版） さくらインターネット研究所 定例 2019/2/20</a> というスライドを公開されていて、その中でさくらインターネット研究所の役割を、次のように述べておられます。</p>

<p><iframe src="//www.slideshare.net/slideshow/embed_code/key/3EbKseu7Kcrp9n?startSlide=24" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/kenwashikita/research-and-development-review-of-ken-washikita-201902" title="Research and Development Review of Ken Washikita, 2019/02" target="_blank">Research and Development Review of Ken Washikita, 2019/02</a> </strong> from <strong><a href="//www.slideshare.net/kenwashikita" target="_blank">Ken Washikita</a></strong> </div></p>

<p>また、<a href="https://research.sakura.ad.jp/2019/02/22/concept-vision-2019/">超個体型データセンターを目指す当研究所のビジョン – さくらインターネット研究所</a> という中・長期ビジョンも公開されています。</p>

<p>まだ自分の研究テーマは明確になっていませんし、研究者としてはひよこにすらなれていない卵の状態ですが、matsumotoryさんをはじめ研究所の諸先輩方から学びながら、研究所の役割を念頭に置き、研究所が掲げるビジョンの実現に向けて、自分が得意な技術領域で貢献できるよう、研究開発に取り組んでいきたいと思います。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[フリーランスになって4年が経った]]></title>
    <link href="https://mizzy.org/blog/2018/04/02/1/" />
    <updated>2018-04-02T11:00:00+09:00</updated>
    <id>https://mizzy.org/blog/2018/04/02/1/</id>
    <content type="html"><![CDATA[
<blockquote class="twitter-tweet" data-lang="en"><p lang="ja" dir="ltr">フリーランスとして食っていけなくなったのでアルバイト始めました <a href="https://t.co/AG92ed5xsI">pic.twitter.com/AG92ed5xsI</a></p>&mdash; Gosuke Miyashita (mizzy) (@gosukenator) <a href="https://twitter.com/gosukenator/status/977210157024256000?ref_src=twsrc%5Etfw">March 23, 2018</a></blockquote>

<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>このツイートは、たまたまセブンイレブンの制服を着る機会があったので着てみたついでに撮影して冗談でツイートしただけ。ツイートした後に、あ、これエイプリルフールネタにとっておけば良かった、と思った。</p>

<hr>

<h2>仕事について</h2>

<p>昨年も一昨年と同様、<a href="http://atl.recruit-tech.co.jp/">リクルートテクノロジーズ ATL</a> での仕事がメインで、それ以外には golang でミドルウェアを実装する仕事や技術顧問的な仕事が少し、という感じだった。</p>

<p>ATL の仕事としては、<a href="http://atl.recruit-tech.co.jp/blog/4339/">libspecinfra</a> の開発をしていたけど、昨年いっぱいで契約が終了した。libspecinfra の開発は続けたいと思いつつも、仕事として時間が割けなくなったので、現在開発は停止状態。</p>

<p>ATL の仕事が昨年末で終了したことで、今年から仕事の仕方ががらっと変わった。昨年までは掛け持ちは多いときでも2社、大半の期間は掛け持ちせず1社だけ、という感じだったけど、現在は4社（<a href="http://www.recruit-mp.co.jp/">リクルートマーケティングパートナーズ</a>、<a href="https://www.talentio.co.jp/">タレンティオ</a>、<a href="https://corp.toreta.in/">トレタ</a>、<a href="https://aktsk.jp/">アカツキ</a>）を掛け持ちしている。また、ATL の仕事は現場から少し離れていたけど、今は割と現場に近い位置で仕事している。4社掛け持ち、コンテキストスイッチ大きそうだけど大丈夫かな、と思ったけど、ほとんどリモートでの仕事で、厳密に時間管理されているわけでもなく、曜日や時間が固定されているわけでもないので、自分の裁量で適当に時間配分しながら、今のところは無理なく回せている。</p>

<p>仕事内容的には、OSS（<a href="https://github.com/aktsk/nolmandy">aktsk/nolmandy</a> と <a href="https://github.com/aktsk/kalvados">aktsk/kalvados</a>）の開発をしたり、OSやミドルウェアのアップグレードのお手伝いをしたり、監視周りの整備をしたり、ログ収集基盤の導入をお手伝いしたり、壁打ち役になったり、など様々。</p>

<p>ATL の仕事をしていた頃は、収入の9割を依存していたので、契約切れて次の仕事が見つからなかったら収入がなくなる、という不安があった。昨年9月にはこんなツイートしてる。</p>

<blockquote class="twitter-tweet" data-lang="en"><p lang="ja" dir="ltr">割と余裕どころか、来年から仕事なくなる可能性も出てきたので、仕事ください。 <a href="https://t.co/VjpP8FxL7a">https://t.co/VjpP8FxL7a</a></p>&mdash; Gosuke Miyashita (mizzy) (@gosukenator) <a href="https://twitter.com/gosukenator/status/905662381497270274?ref_src=twsrc%5Etfw">September 7, 2017</a></blockquote>

<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>他にもこんな職探しツイートもしてた。</p>

<blockquote class="twitter-tweet" data-lang="en"><p lang="ja" dir="ltr">来年1月からの仕事が未定なので、これを実行する時が来たか <a href="https://t.co/Aj6EkIpJ8y">https://t.co/Aj6EkIpJ8y</a></p>&mdash; Gosuke Miyashita (mizzy) (@gosukenator) <a href="https://twitter.com/gosukenator/status/929987306441732096?ref_src=twsrc%5Etfw">November 13, 2017</a></blockquote>

<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>ツイートしてたら仕事がもらえた。</p>

<blockquote class="twitter-tweet" data-lang="en"><p lang="ja" dir="ltr">ありがたいことに、色々お声がけいただいて、1月以降も妻と5人の子供を養っていけそうです。 <a href="https://t.co/20Ars6agrt">https://t.co/20Ars6agrt</a></p>&mdash; Gosuke Miyashita (mizzy) (@gosukenator) <a href="https://twitter.com/gosukenator/status/936186019832987651?ref_src=twsrc%5Etfw">November 30, 2017</a></blockquote>

<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>昨年12月から今年1月にかけては、お声がけいただいた企業さんを訪問して話を聞いたり、仕事の詳細を詰めるための打合せをしたりで、外出することが多かった。2月以降はほとんど家で仕事していて、仕事で外出するのは月に2，3回程度になった。花粉症の季節にあまり外に出なくて良いのはありがたい。</p>

<p>4社掛け持ち、コンテキストスイッチの増大と、一社あたりにかける時間が減ることで、進捗が遅くなるというデメリットがあるけど、収入の依存先が分散されているという安心感もある。</p>

<hr>

<h2>名刺をつくった</h2>

<blockquote class="twitter-tweet" data-lang="en"><p lang="ja" dir="ltr"><a href="https://twitter.com/nagayama?ref_src=twsrc%5Etfw">@nagayama</a> 氏につくってもらったカッコいい名刺届いた。オモテ面、ロゴと名前だけなのがインパクトあって良い。 <a href="https://t.co/rw7a6GnQ6P">pic.twitter.com/rw7a6GnQ6P</a></p>&mdash; Gosuke Miyashita (mizzy) (@gosukenator) <a href="https://twitter.com/gosukenator/status/968379806051074049?ref_src=twsrc%5Etfw">February 27, 2018</a></blockquote>

<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>仕事上、名刺がなくて困ることはほぼないので、つくらなくてもいいか、と思っていたけど、あると便利な時もあるので、法人化してから2年経ってようやくつくった。</p>

<hr>

<h2>収入について</h2>

<p>フリーランスになってからの収入の構成要素、3年目に法人化したのもあって、以下のように変遷している。</p>

<ul>
<li>1年目: 前職の給与収入 + 個人事業収入</li>
<li>2年目: 個人事業収入</li>
<li>3年目: 個人事業収入 + 役員報酬</li>
<li>4年目: 役員報酬</li>
</ul>

<p>個人事業収入は事業売上がすべて個人の収入、役員報酬は自分の会社の売上の一部が個人の収入になっている。なので、すべての事業売上が個人の収入となっている2年目が収入のピークで、3年目、4年目と収入は下がっている。</p>

<p>が、それはあくまでも個人としての収入の話で、法人個人問わず事業全体の売上で言えば、2年目以降は割と安定している。今年も同じぐらいの売上になりそう。</p>

<hr>

<h2>本業以外の仕事</h2>

<p>昨年末から今年の初めにかけて、コラムを3本寄稿して、インタビューを1本受けた。</p>

<ul>
<li><a href="https://hikakujoho.com/manekai/entry/20171207">独立間もないフリーランス＆5人子持ちの四十男が「家」を建てた話 - マネ会</a></li>
<li><a href="https://employment.en-japan.com/engineerhub/entry/2018/01/31/110000">「一つのことをうまくやる」に忠実たれ。Serverspec開発者mizzyが語る成功するOSSの設計 - エンジニアHub｜若手Webエンジニアのキャリアを考える！</a></li>
<li><a href="https://geek-out.jp/column/entry/2018/03/08/110000">オープンさは私のキャリアの原動力 ─ SIer、Web系、フリーランスという変遷で実感した「オープンにすること」の大切さ - GeekOut</a></li>
<li>まだ未公開の家の書斎に関するコラム。もうすぐ公開予定。</li>
</ul>

<p>コラムのうち2本は技術とはまったく関係ない、家のことについて書いた。</p>

<hr>

<h2>まとめ</h2>

<p>Twitter は優秀な職探しツール。</p>

<hr>

<h2>関連エントリ</h2>

<ul>
<li><a href="http://mizzy.org/blog/2017/04/01/1/">フリーランスになって3年が経った - Gosuke Miyashita</a></li>
<li><a href="http://mizzy.org/blog/2016/04/01/1/">フリーランスになって2年が経った - Gosuke Miyashita</a></li>
<li><a href="http://mizzy.org/blog/2015/04/01/1/">フリーランスになって1年が経った - Gosuke Miyashita</a></li>
</ul>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[アレクサ スマホを探してでスマホを鳴らすやつ]]></title>
    <link href="https://mizzy.org/blog/2017/12/14/1/" />
    <updated>2017-12-14T14:16:35+09:00</updated>
    <id>https://mizzy.org/blog/2017/12/14/1/</id>
    <content type="html"><![CDATA[
<iframe width="560" height="315" src="https://www.youtube.com/embed/ejXWG8fOyjA" frameborder="0" gesture="media" allow="encrypted-media" allowfullscreen></iframe>

<p><a href="https://github.com/mizzy/alexa-findmyphone">Lambda Function のソースコードはこちら</a>。</p>

<hr>

<h2>これは何？</h2>

<p>「アレクサ、スマホを探すを開いて」<br>
「誰のスマホを探しますか」<br>
「長男」<br>
「長男のスマホを鳴らしています」  </p>

<p>といった感じで、アレクサからスマホに電話をかけてもらい、スマホを探すやつ。</p>

<hr>

<h2>つくった動機</h2>

<p>家の中で iPhone を見失った場合、パソコンや妻の iPhone から「iPhoneを探す」にアクセスして音を鳴らしていたけど、パソコンを開いてブラウザからアクセスしたり、妻の iPhone を借りたり、といった手間がかかっていたので、声だけで実現できるようにしたかった。</p>

<p>ifttt でも同様のことができるけど、US Only だったり、既存のアレクサスキルだと、アプリを入れる必要があったり、複数の端末に対応してるのかわからなかったりしたので、自分でつくることにした。</p>

<p>基本的なつくりは <a href="http://mizzy.org/blog/2017/12/12/1/">アレクサごはんだよで LINE 通知するやつ</a> と同じで、LINE API 叩くところが Twilio API 叩くだけ、といった感じなので、さくっとつくれた。</p>

<hr>

<h2>使い方</h2>

<p><a href="https://github.com/mizzy/alexa-findmyphone#%E4%BD%BF%E3%81%84%E6%96%B9">GitHub 上の README</a> を参照。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[アレクサ ごはんだよで LINE 通知するやつをつくった]]></title>
    <link href="https://mizzy.org/blog/2017/12/12/1/" />
    <updated>2017-12-12T15:20:52+09:00</updated>
    <id>https://mizzy.org/blog/2017/12/12/1/</id>
    <content type="html"><![CDATA[
<iframe width="560" height="315" src="https://www.youtube.com/embed/wxj7vpirw-k" frameborder="0" gesture="media" allow="encrypted-media" allowfullscreen></iframe>

<p><a href="https://github.com/mizzy/alexa-gohan">Lambda Function のソースコードはこちら</a>。</p>

<hr>

<h2>これは何？</h2>

<p>「アレクサ、ごはんだよを開いて」<br>
「誰にごはんだよと伝えますか」<br>
「長男」<br>
「長男にごはんだよと伝えました」  </p>

<p>といった感じで、アレクサから家族の誰かに、ごはんができたことを LINE してもらうやつ。</p>

<p>「アレクサ、ごはんだよ 長男」でも呼び出せるようにはなっているけど、認識率が悪く、10回に1回ぐらいしか認識しない。</p>

<hr>

<h2>つくった動機</h2>

<p>飯の支度ができて「ごはんだよ」と叫んでも、長男や次男は部屋の中でイヤホンつけて音楽聴いていて、声が届かないことがよくある。そういう時は LINE で知らせてるけど、いちいちスマホを手にとって、LINE を開いて、友達リストから息子達を探して…とやるのは手間がかかる。家事をしてる最中は特に面倒。</p>

<p>なので、声だけで LINE でごはんだよと通知できるやつをつくった。</p>

<hr>

<h2>使い方</h2>

<p><a href="https://github.com/mizzy/alexa-gohan#%E4%BD%BF%E3%81%84%E6%96%B9">GitHub 上の README</a> を参照。</p>

<hr>

<h2>TODO</h2>

<ul>
<li>全員にブロードキャストもできるようにしたい。</li>
<li>メッセージが「ごはん」の1パターンだけなので、バリエーションを増やしたい。

<ul>
<li>現在時刻を識別して「晩ご飯できたよ」と送る、とか。</li>
</ul></li>
</ul>

<hr>

<h2>FAQ</h2>

<h3>誰に送るか指定しなくてもブロードキャストするだけでいいのでは？</h3>

<p>長男は塾や習い事がある日は早めに食べる、など、全員が同じタイミングで食事するわけではないので。</p>

<h3>それ Clova WAVE とか Clova Friends とかでできるよ</h3>

<p>とりあえず手元にあるのが Amazon Echo Dot だけだし、アレクサスキルの開発方法を学んでみたかったし、API Gateway とか Lambda とか触ってみたかったので。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[Rust で D-Bus 経由で systemd から情報を得る]]></title>
    <link href="https://mizzy.org/blog/2017/10/11/1/" />
    <updated>2017-10-11T12:29:40+09:00</updated>
    <id>https://mizzy.org/blog/2017/10/11/1/</id>
    <content type="html"><![CDATA[
<p>色々試行錯誤したのでメモ。</p>

<hr>

<h2>結論</h2>

<p><a href="https://crates.io/crates/dbus">dbus crate</a> を使う。</p>

<hr>

<h2>経緯</h2>

<p>開発中の <a href="http://atl.recruit-tech.co.jp/blog/4339/">libspecinfra</a> で、systemd 配下の service の状態を取得できるようにするための provider を書こうと思い、色々調べたりコード書いて試したりした。</p>

<hr>

<h2>使えそうな crates を探す</h2>

<p>まずは目的に合う crates がないか <a href="https://crates.io/">crates.io</a> で検索。ざっと以下のようなものが見つかる。</p>

<ul>
<li><a href="https://crates.io/crates/systemd">systemd</a></li>
<li><a href="https://crates.io/crates/systemd-dbus">systemd-dbus</a></li>
<li><a href="https://crates.io/crates/dbus">dbus</a></li>
<li><a href="https://crates.io/crates/dbus-bytestream">dbus-bytestream</a></li>
</ul>

<p>systemd crate は <a href="https://github.com/systemd/systemd/tree/master/src/libsystemd">libsystemd</a> の Rust インターフェースで、<a href="https://www.freedesktop.org/software/systemd/man/sd-daemon.html">sd-daemon</a>、<a href="https://www.freedesktop.org/software/systemd/man/sd-id128.html">sd-id128</a>、<a href="https://www.freedesktop.org/software/systemd/man/sd-journal.html">sd-journal</a>、<a href="https://www.freedesktop.org/software/systemd/man/sd-login.html">sd-login </a> に対応している。が <a href="https://www.freedesktop.org/software/systemd/man/sd-bus.html">sd-bus</a> は <a href="https://github.com/jmesmon/rust-systemd/blob/aead34dcf64e90014da0fadfe54ea439a19ce8c4/src/lib.rs#L68">まだ実装が不完全</a> なようなので、目的には合わなさそう、と判断。</p>

<p>systemd-dbus crate は2年半以上更新がなく、rust 1.19.0 でコンパイルが通らなかったので断念。</p>

<p>他に systemd を直接扱える、目的に適いそうな crate が見当たらなかったので、D-Bus が扱える crate ってことで、dbus crate と dbus-bytestream create を試してみることにした。</p>

<hr>

<h2>dbus-send で D-Bus を理解する</h2>

<p>dbus crate にしても dbus-bytestream crate にしても、ざっとドキュメントやコードを読んだ感じ、D-Bus でどういった形でメッセージのやりとりがなされているのかを理解しないと、使うのは無理だなこれは、と思ったので、まずは <a href="https://dbus.freedesktop.org/doc/dbus-send.1.html">dbus-send</a> コマンドで必要な情報が得られるかどうかトライしてみた。</p>

<p>libspecinfra でやりたいことのひとつは、サービスが動いているかどうかを調べること。dbus-send では以下のような形で実行すれば、この情報が得られることがわかった。</p>

<p>まずはユニット名(ssh.service)からオブジェクトパス(/org/freedesktop/systemd1/unit/ssh_2eservice)を取得。</p>

<pre><code>$ dbus-send --system \
   --dest=org.freedesktop.systemd1 \
   --type=method_call \
   --print-reply \
   /org/freedesktop/systemd1 \
   org.freedesktop.systemd1.Manager.GetUnit \
   string:ssh.service

method return time=1507693363.257785 sender=:1.10 -&gt; destination=:1.220 serial=3078 reply_serial=2
   object path &quot;/org/freedesktop/systemd1/unit/ssh_2eservice&quot;
</code></pre>

<p><code>--dest=org.freedesktop.systemd1</code> で接続先のバス名を指定。<code>/org/freedesktop/systemd1</code> が操作対象のオブジェクトパス、<code>org.freedesktop.systemd1.Manager</code> がインターフェースで、それに続く <code>GetUnit</code> が呼び出すメソッド、<code>string:ssh.service</code> がメソッドに渡す引数、という形式になっている。</p>

<p>このオブジェクトパスの ActiveState プロパティを取得。</p>

<pre><code>$ dbus-send --system \
   --dest=org.freedesktop.systemd1 \
   --type=method_call \
   --print-reply \
   /org/freedesktop/systemd1/unit/ssh_2eservice \
   org.freedesktop.DBus.Properties.Get \
   string:org.freedesktop.systemd1.Unit \
   string:ActiveState

method return time=1507693392.955268 sender=:1.10 -&gt; destination=:1.221 serial=3079 reply_serial=2
   variant       string &quot;active&quot;
</code></pre>

<p>これでサービスの状態を得ることができた。</p>

<p>どのようなメソッドやプロパティがあるかは <a href="https://www.freedesktop.org/wiki/Software/systemd/dbus/">The D-Bus API of systemd/PID 1</a> に載っている。</p>

<hr>

<h2>Rust で dbus-send で得たのと同じ情報を得る</h2>

<p>dbus crate を使って以下のようなコードを書けば良い。</p>

<div><script src='https://gist.github.com/0210a1b8c56c1bf1411b1b8e310e90d8.js?file='></script>
<noscript><pre><code></code></pre></noscript></div>

<p>試したコードは Cargo.toml 等も含めて <a href="https://github.com/mizzy/rust-systemd-playground">GitHub</a> に置いてある。</p>

<p>dbus crate は <a href="https://github.com/diwic/dbus-rs/tree/master/dbus/examples">サンプルコード</a> もあるし、<a href="https://github.com/diwic/dbus-rs/blob/master/dbus/examples/argument_guide.md">ドキュメント</a> もあるので、ドキュメントがほとんどない dbus-bytestream crate と比べると、比較的扱いやすいように思える（といっても、ドキュメント読めばすべてわかる、というわけではなく、コードも読んで色々試行錯誤したけど）。</p>

<p>dbus-bytestream も同時に試したけど、取得した ActiveState の情報をデコードする方法がよくわからないまま、dbus crate の方が動いたので、途中で断念した。なので、GitHub 上にある dbus-bytestream を使ったコードはエラーで動かない。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[OBD-IIアダプタ経由で車両情報を Mac から取得してみる]]></title>
    <link href="https://mizzy.org/blog/2017/09/06/1/" />
    <updated>2017-09-06T18:00:00+09:00</updated>
    <id>https://mizzy.org/blog/2017/09/06/1/</id>
    <content type="html"><![CDATA[
<p>最近車に乗ることが多く、ほぼ毎日乗っているせいか、コネクテッドカー関連の技術に興味が沸いてきた。ので、調べたことや試したことなんかをメモしていく。</p>

<p>まずは車両情報をパソコンから取得することにトライ。調べてみると、車両情報をパソコンやスマホから取得するためには、車に搭載された <a href="https://ja.wikipedia.org/wiki/%E8%87%AA%E5%8B%95%E8%BB%8A%E3%81%AE%E8%87%AA%E5%B7%B1%E8%A8%BA%E6%96%AD%E6%A9%9F%E8%83%BD#OBD2">OBD-II</a> ポートに、<a href="https://www.elmelectronics.com/">ELM Electronics 社</a> 製の ELM327 というチップを積んだアダプタを挿し、Bluetooth や Wi-Fi を経由して取得する、というやり方が一般的なようだ。</p>

<p>というわけで、<a href="https://www.amazon.co.jp/gp/product/B00J7CC4T2">Bluetooth 版</a> （写真左）と <a href="https://www.amazon.co.jp/gp/product/B01IHV5VFM">Wi-Fi 版</a>（写真右）を買ってみた。 </p>

<p><img src="/images/2017/09/elm327.jpg" title="ELM327" ></p>

<p>まずは Bluetooth 版。macOS Sierra の場合、ペアリングすると <code>/dev/tty.OBDII-Port</code> というデバイスファイルが見えるようになるので、<code>screen</code> コマンドで接続して対話する。</p>

<pre><code>$ screen /dev/tty.OBDII-Port
&gt;ONNECTED
</code></pre>

<p>正しく改行され表示されるよう、ラインフィードをオンにする。</p>

<pre><code>&gt;atl1
OK
</code></pre>

<p>識別コードを表示させると、ELM327のバージョンが表示される。</p>

<pre><code>&gt;ati
ELM327 v1.5
</code></pre>

<p>プロトコルを表示させてみる。<a href="https://www.elmelectronics.com/products/ics/obd/">ELM327 は様々なプロトコルに対応している</a> が、この車が対応しているプロトコルは ISO 15765-4 (CAN 11/500) で、自動で認識しているようだ。</p>

<pre><code>&gt;atdp
AUTO, ISO 15765-4 (CAN 11/500)
</code></pre>

<p>他に使える AT コマンドについては、 <a href="https://www.sparkfun.com/datasheets/Widgets/ELM327_AT_Commands.pdf">ELM327 がサポートしている AT コマンド一覧（PDF）</a> を見ると良い。</p>

<p>次に車両情報を取得してみる。OBD-IIポートから情報を取得するには、PID(Parameter ID) と呼ばれるコードを入力する。<a href="https://en.wikipedia.org/wiki/OBD-II_PIDs">PID の一覧はここに載っている</a>。</p>

<p>ここにある PID をすべての車がサポートしているわけではないし、メーカーや車独自の PID もあるらしい。</p>

<p><a href="https://en.wikipedia.org/wiki/OBD-II_PIDs#Standard_PIDs">標準で定められた PID の一覧はここに載っている</a>。</p>

<p>これを見ると、PID には <a href="https://en.wikipedia.org/wiki/OBD-II_PIDs#Modes">Mode</a> という大まかなカテゴリがあり、Mode につづいて必要な情報の PID を入力するようだ。例えば、対応している PID の一覧を取得するためのコードは、Mode 01、PID 00 なので、0100 と入力する。</p>

<pre><code>&gt;0100
41 00 98 18 00 01
41 00 BE 3E B8 13
</code></pre>

<p><a href="https://en.wikipedia.org/wiki/OBD-II_PIDs#Query">Wikipedia ページの Query の項目</a> には、先頭に「Number of additional data bytes」というのがあるけど、これはなくてもいい？よくわからない。</p>

<p>レスポンスのフォーマットも <a href="https://en.wikipedia.org/wiki/OBD-II_PIDs#Response">Wikipedia に載っている</a>。こちらも先頭に「Number of additional data bytes」というのがあるけど、実際に試したレスポンスには含まれてなさそう。</p>

<p>レスポンスの最初の <code>41</code> は 40 に Mode を足した値で、その次の <code>00</code> は Mode を含まない PID をそのまま返しているので、実際に読むべき値はその次の <code>98 18 00 01</code> と <code>BE 3E B8 13</code> になる。レスポンスが2行になっているのは、おそらく2つの ECU(Engine Control Unit) から値を取得しているからだろう。どうやら片方がエンジン系ECU、片方がトランスミッション系ECUらしいのだが、この辺りもよくわかってない。</p>

<p>レスポンスは、PID 01〜20 の中で対応しているものをビットエンコードしたもので、読み方は <a href="https://en.wikipedia.org/wiki/OBD-II_PIDs#Mode_1_PID_00">Wikipedia を参照</a>。</p>

<p>Engine coolant temperature の取得はコード <code>0105</code> で行う。<code>41 05</code> を除いた <code>58</code> が見るべき値だが、これは 16進数なので10進数では 88 になるが、<a href="https://en.wikipedia.org/wiki/OBD-II_PIDs#Mode_01">Wikipedia でこの PID の Formula</a> を見ると「A - 40」と書かれているので、88 - 40 = 44℃ が実際に知りたかった値となる。</p>

<pre><code>&gt;0105
41 05 58
41 05 58
</code></pre>

<p>Wi-Fi版のものは、車に挿してイグニッションオンにすると、WiFi_OBDII という SSID が表示されるので、接続してやる。</p>

<p><img src="/images/2017/09/wifi-obd2.jpg" title="WiFi_OBDII" ></p>

<p>すると、192.168.0.10:35000 に繋いで対話できるので、telnet や nc コマンド等で接続して対話する。</p>

<p>ATコマンドは Bluetooth 版と同様。</p>

<pre><code>$ telnet 192.168.0.10 35000
Trying 192.168.0.10...
Connected to 192.168.0.10.
Escape character is &#39;^]&#39;.
atl1
OK

&gt;ati
ELM327 v1.5

&gt;atdp
AUTO,ISO 15765-4 (CAN 11/500)
</code></pre>

<p>車両情報を取得してみると、レスポンスが Bluetooth 版と異なる。</p>

<pre><code>&gt;0100
7E8064100BE3EB813
7E906410098180001

&gt;0105
7E903410585
7E803410585

&gt;0120
7E8064120A007A011
7E906412000000001
</code></pre>

<p><code>7E806</code> や <code>7E903</code> といった部分が、Bluetooth 版のレスポンスにはないが、これはどうやら <a href="https://ja.wikipedia.org/wiki/Controller_Area_Network">CAN</a> というプロトコルのデータフレームに含まれているもののようだ。 </p>

<p><a href="http://monoist.atmarkit.co.jp/mn/articles/0807/09/news140.html">CAN通信におけるデータ送信の仕組みとは？ (1/3) - MONOist（モノイスト）</a> を見ると、<code>7E8</code> や <code>7E9</code> が識別のための ID、続く <code>06</code> や <code>03</code> はコントロールフィールド中のデータレングスコードで、その後に続くデータフィールドの長さを表しているようだ。</p>

<p>内部的には ECU 同士や ECU と OBD-IIアダプタ間では CAN で通信していて、Bluetooth 版アダプタは、CAN のデータフレームのうち、データフィールドしか出力しないけど、Wi-Fi版アダプタは、ID やコントロールフィールドも出力している、ということなのだろう。</p>

]]></content>
  </entry>


</feed>
