<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Gosuke Miyashita]]></title>
  <link href="http://mizzy.org/atom.xml" rel="self"/>
  <link href="http://mizzy.org/"/>
  <updated>2012-11-02T01:09:24+09:00</updated>
  <id>http://mizzy.org/</id>
  <author>
    <name><![CDATA[Gosuke Miyashita]]></name>
    
  </author>
  <generator uri="https://github.com/mizzy/stellar/">Stellar</generator>


  <entry>
    <title type="html"><![CDATA[ペパボでの GitHub の使い方]]></title>
    <link href="http://mizzy.org/blog/2012/11/02/1/" />
    <updated>2012-11-02T01:09:24+09:00</updated>
    <id>http://mizzy.org/blog/2012/11/02/1/</id>
    <content type="html"><![CDATA[
<p><a href="http://dqn.sakusakutto.jp/2012/10/github_introduce.html">必殺！Github導入に向けて上司を説得する時に使える資料まとめ - DQNEO起業日記</a> でペパボも取り上げて頂いたので、ペパボでの GitHub の使い方について、少し詳しく書いてみます。</p>

<h2>開発での利用</h2>

<p>これは普通の使い方ですね。なので省略。</p>

<hr>

<h2>GitHub Enterprise は利用していない</h2>

<p>金額的な面で GitHub Enterprise の利用は厳しいため、GitHub Enterprise ではなく、ノーマル（？）な GitHub を利用しています。（GitHub Enterprise にすると、現在のコストの 8 〜 9 倍ぐらいになってしまう。）</p>

<p>ここはセキュリティ面とのバランスが難しいところではありますが…</p>

<p>とはいえ、GitHub に何かあってソースコードが流出した場合に影響の大きさが懸念されるサービスについては、GitHub を利用しない、といった判断もしています。（ですので、現在ペパボ全社的に完全に GitHub に移行してる、というわけではないです。）</p>

<hr>

<h2>サービスや部署単位で組織アカウントを持っている</h2>

<p>ペパボはサービスが多いため、ひとつの組織アカウントに全サービスのリポジトリを持たせるとカオスになりそうなため、サービスや部署毎に組織アカウントを作って運用しています。 以下の画像のように、様々なサービスの組織アカウントがあります。</p>

<p><img src="/images/2012/11/organizations.png"></p>

<hr>

<h2>運用省力化スクリプト</h2>

<p>とはいえ、組織アカウントを分散してしまうと、メンバーの管理が面倒になってしまいます。そこで、<a href="https://github.com/mizzy/gh-tools/blob/master/manage_paperboy.rb">GitHub の API を利用したスクリプト</a> により、その辺りの運用を省力化しています。このスクリプトでは以下のようなことをやっています。</p>

<ul>
<li>与えられたテキストファイルに書かれたアカウントを、paperboy-all という組織アカウントの、paperboy というチームに追加する。</li>
<li>paperboy-all/paperboy チームのメンバーを、他のペパボ組織アカウントの paperboy チームに同期する</li>
<li>各ペパボ組織アカウントの paperboy チームに対して、その組織アカウント内のプライベートリポジトリに対する Pull Only 権限を与える</li>
</ul>

<p>このスクリプトを cron で回すことにより、新しくメンバーを追加したい場合は、所定のテキストファイルに書き込んでおくだけで済み、新たにリポジトリが作られた場合には、自動的にペパボ全社員が参照できるようになります。</p>

<p>これ以外のチームメンバー運用については、各組織アカウントにひもづくサービスや部署に一任しています。</p>

<p>また、組織アカウントがたくさんあると、経理の方の処理が大変なので、月一で組織アカウント毎の支払日と金額をリストアップした Wiki ページを作成し、経理用 ML にリンクを送る、というスクリプトも動かしてます。（GitHub にまだあげてないですが、興味ある方がいればあげますので、お知らせください。）</p>

<hr>

<h2>技術者の人事評価</h2>

<p><a href="/blog/2012/02/29/1/">ここ</a> とか <a href="/blog/2012/08/20/1/">ここ</a> で書いてますが、技術者の人事評価の中で、以下のように利用しています。</p>

<ul>
<li>シニア、アドバンスド・シニアに昇格したい人は、自分がそれに相応しいと思う理由や実績を Markdown で書いて、評価用リポジトリに pull request する。

<ul>
<li>このリポジトリはペパボ社員なら誰でも見ることができる。</li>
</ul></li>
<li>評価文書について pull request 内のコメントでやりとりして修正してもらう。たとえば、ここもっと詳しく書いて、とか、こういうことやってたから、文書に盛り込むといいんじゃない、的なやりとりを。</li>
<li>pull request された文書を元に、面談を行う。</li>
<li>面談が終わったら、pull request をマージする。</li>
<li>マージ後、宮下が一次評価結果とコメントを Markdown 文書に書き込む。

<ul>
<li>結果とコメントも、当然ペパボ社員なら誰でも見ることができる。</li>
</ul></li>
</ul>

<p>実際に pull request されたものは、こんな感じです。</p>

<p><img src="/images/2012/11/morygonzalez.png"></p>

<hr>

<h2>デザインプロセスの共有</h2>

<p><a href="https://twitter.com/chocolatina">@chocolatina</a> が <a href="http://togetter.com/li/398295">【デザイン】 Webサービスのデザイン過程晒してみた 【ブクログ プレミアム】</a> でまとめてくれてる、デザインの制作過程ですが、社内では GitHub Issues を利用して過程が共有されています。</p>

<p><img src="/images/2012/11/screenshots.png"></p>

<p>YAPC::Asia Tokyo 2012 で配布したあんちぽブロマイド制作秘話なんかも共有されています。その一部をチラ見せ。</p>

<p><img src="/images/2012/11/antipop.png"></p>

<p>おそらく、<a href="https://twitter.com/demiflare168">@demiflare168</a> がこれを全部パブリックに晒してくれるはずなので、お楽しみに。</p>

<p>こんな感じで過程をイシューにまとめて、デザイナ同士がコメントでやりとりて、デザインプロセスの共有を行っています。</p>

<hr>

<h2>イベントに関するやりとり</h2>

<p><a href="http://atnd.org/event/peparty1210">PAPARTY!</a> というイベントが 10/27(土) に大阪で開催され、また、<a href="https://www.facebook.com/events/544148265612094/">福岡でも 11/24(土)に開催予定</a> なんですが、これに関するアイデアだし、ミーティング議事録、TODO 管理なども、GitHub の Issues を活用して行われています。</p>

<p>こういった感じで、ペパボでは開発以外にも、様々な形で GitHub を活用しています。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[YAPC::Asia Tokyo 2012 2日目]]></title>
    <link href="http://mizzy.org/blog/2012/10/01/1/" />
    <updated>2012-10-01T20:18:46+09:00</updated>
    <id>http://mizzy.org/blog/2012/10/01/1/</id>
    <content type="html"><![CDATA[
<p>YAPC::Asia Tokyo 2012 最終日の感想文です。</p>

<p>この日は、同僚である <a href="https://twitter.com/kentaro">あんちぽさん</a> のトークに間に合えばいいかなー、ぐらいなつもりで家を出たのですが、朝一のトークに間に合ったので、<a href="https://twitter.com/kazeburo">@kazeburo</a> さんの <a href="http://yapcasia.org/2012/talk/show/08930a0c-b132-11e1-885d-564e6aeab6a4">1台から500台までのMySQL運用(YAPC::Asia編)</a> を聞きに 3F へ。</p>

<p>確か、kazeburo さんとはじめてお会いしたのは、YAPC::Asia Tokyo 2006 で、京都から東京に移るか移らないかぐらいの頃だったよなー、と懐かしく思いながらトークを拝聴してました。あの頃は Femo というサービスを運営してたりして、ウェブ開発者のイメージが強かったのが、今やすっかりウェブオペレータ といった感じで、僕も当時はペパボに入ったばかりで、技術責任者にはなっておらず、社内では開発者という肩書きだったので、お互いすっかり変わったなー、と、時の流れを激しく感じました。（トークの内容全然関係ない。）</p>

<p>次はそのまま同じ部屋で、<a href="https://twitter.com/maka2_donzoko">@maka2_donzoko</a> さんの <a href="http://yapcasia.org/2012/talk/show/5f1aa8b2-da18-11e1-b614-0d4e6aeab6a4">YAPC::Asiaきたつもり同人ボードゲーム「やっぱしぃYAPC」の考案と実践</a> を拝聴。期待を裏切らないクオリティと面白さ。どこからどう見ても YAPC でしたね。Acme 大全が分厚くなってることにも驚きました。（買うの忘れてた。）</p>

<p>そして、ペパボ公式コンテンツ、我らがアイドルあんちぽさんの <a href="http://yapcasia.org/2012/talk/show/9fba79a8-b3ce-11e1-b82e-92b46aeab6a4">Rubyistの国のPerl使い</a> 。社内であんちぽさんのプレゼンは何度か拝見したけど、外でのプレゼンは実ははじめて。すばらしいコンテンツっぷりを発揮していて、さすがだなー、と。</p>

<p>あんちぽさんがプレゼンでも話していたように、ペパボでは <a href="https://twitter.com/hsbt">@hsbt</a> さんとともに、主に開発プロセスのテコ入れをやってもらっていて、本当に助かっています。特に僕は、基本的にはプログラマではないので、この辺りはそれほど得意でもなく、以前からこういったことやらなきゃなー、と思っていながらできなかったことを、二人でガンガン進めてくれるので、本当にありがたいです。</p>

<p>お昼休憩あたりからは、後に控えた自分のトークのことで頭がいっぱいなのと緊張しまくりで心ここにあらず状態。緊張のあまり昼飯食えませんでした。</p>

<p>なので、基本的にはメインルームにいたものの、その後のトークの内容がほとんど頭に入ってません。LT は若干リラックスして聞けたものの、トリの <a href="http://yapcasia.org/2012/talk/show/42f3fba2-f8e0-11e1-8b29-beab6aeab6a4">竹迫さんのトーク</a> で緊張がピークに。</p>

<p>で、いよいよ自分の出番である クロージングキーノート <a href="http://yapcasia.org/2012/talk/show/79991522-db79-11e1-be22-0d4e6aeab6a4">How Perl Changed My Life</a> を話すことに。こちら、スライドは公開済みですが、キーワードが散りばめられてるだけですので、興味ある方は動画の公開をお待ちください。</p>

<p>内容を簡単にまとめると、</p>

<ul>
<li>今の会社（ペパボ）に入って、責任あるポジションを任されて、やりがいのある仕事ができ、仕事仲間にも恵まれてるのは Perl のおかげ</li>
<li>Perl から得た教訓を短い言葉でまとめると

<ul>
<li>Shut the fuck up and write some code</li>
<li>Openess is our driver for excellence</li>
<li>知之者不如好之者、好之者不如樂之者（これを知る者はこれを好む者に如かず、これを好む者はこれを楽しむ者に如かず）</li>
</ul></li>
</ul>

<p>といった感じです。</p>

<p>壇上からラリーに英語でお礼を述べるのは、以前から考えていたのですが、初日は最前列ど真ん中にいたラリーが2日目はいなくて、あれ、想定と違う、と思ったら、トークの途中で最前列壇上から見て左手にいるのを発見して、無事お礼を述べることができました。ラリーから「どういたしまして」という言葉が返ってきたときは、ちょっと泣きそうになりました。</p>

<p>Perl がなければ今の自分はなく、そんな自分にとって YAPC は本当に特別な場所で、そんな特別な場所で、クロージングキーノートを任されたのは大変名誉なことで、指名してくださった、牧さんをはじめとした JPA スタッフのみなさんには、本当に感謝しています。</p>

<p>プライベートでも仕事でも、Perl を使う機会は少なくなってしまいましたが、YAPC にはこれからもずっと参加するつもりですし、ネタがあれば積極的にトークもしたいと思います。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[YAPC::Asia Tokyo 2012 1日目]]></title>
    <link href="http://mizzy.org/blog/2012/09/30/2/" />
    <updated>2012-09-30T22:09:32+09:00</updated>
    <id>http://mizzy.org/blog/2012/09/30/2/</id>
    <content type="html"><![CDATA[
<p><a href="/blog/2012/09/30/1/">前夜祭</a> につづいて、1日目について。</p>

<p>この日は朝は会社で、YAPC スピーカーデビューとなる同僚の <a href="http://yapcasia.org/2012/talk/show/63dbff60-b365-11e1-befb-95586aeab6a4">まつけん</a> と <a href="http://yapcasia.org/2012/talk/show/3e7acdec-db1e-11e1-90c8-0d4e6aeab6a4">のんたん</a> の発表練習につきあってから会場に向かったので、<a href="https://twitter.com/hasegawayosuke">@hasegawayosuke</a> さんの <a href="http://yapcasia.org/2012/talk/show/aaade824-abc0-11e1-8865-57a46aeab6a4">Web::Security beyond HTML5</a> から聞き始めた。話の内容に興味がある、というよりも、生 hsegawa さんのお話を聞きたかった、という感じで参加。</p>

<p>午後からはりーおたんのトークが聞きたいなー、と思い、その前のトークから部屋に入ろうと思ったら満員で入れず。</p>

<p>しかたなく、多目的ホールで電源確保して、仕事したり自分のスライド書いたりなどしてたら、LTソンがすごい盛り上がりで、正直言うと最初はあまり興味なかったんだけど、聞いてるうちにうずうずしてきて、飛び入り参加でトークしてきました。</p>

<p>トーク内容は、技術的なことは一切話さず、Sqale クーポンあんちぽブロマイドの、撮影風景画像の紹介でした。ブロマイドに使われない写真ばかりで、その場で見られた方々は、とてもラッキーだったと思います。</p>

<p>これで、前夜祭に続いて、2日連続トーク達成。</p>

<p>LT ソン、本当にいい試みで、感動しました。<a href="https://twitter.com/uzulla">uzulla</a> さん、話がうまくておもしろく、場を盛り上げるのが本当にうまい。</p>

<p>最終日のトークで、Plagger Conference で LT デビューした（させられた）話をしたのですが、スピーカーになることが自分にとって大きな転機のひとつだったので、誰もがスピーカーになれるこういった機会がある、というのは、本当に素晴らしいことだと思います。</p>

<p>土日は家庭があるので、hajioji.pm は家から割と近いにも関わらず参加していなかったのですが、今度是非遊びに行きたいと思いました。（って書いてたら、後ろから見てた妻が、行ってきて良いよ、と言ってくれたので、今度行きます。）</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[YAPC::Asia Tokyo 2012 前夜祭]]></title>
    <link href="http://mizzy.org/blog/2012/09/30/1/" />
    <updated>2012-09-30T20:47:56+09:00</updated>
    <id>http://mizzy.org/blog/2012/09/30/1/</id>
    <content type="html"><![CDATA[
<p>ブログを書くまでが YAPC、ってことで、ぼちぼち書いていきます。まずは前夜祭から。</p>

<p><a href="http://yapcasia.org/2012/talk/show/048d468c-ab9e-11e1-a3b5-2a656aeab6a4">Sqale の裏側</a> というタイトルで、ペパボが提供する Ruby/Rack アプリが動く PaaS <a href="http://sqale.jp/">Sqale</a> の裏側のアーキテクチャについてお話してきました。</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/14492929" width="597" height="486" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="http://www.slideshare.net/mizzy/inside-sqales-backend-at-yapcasia-tokyo-2012" title="Inside Sqale&#39;s Backend at YAPC::Asia Tokyo 2012" target="_blank">Inside Sqale&#39;s Backend at YAPC::Asia Tokyo 2012</a> </strong> from <strong><a href="http://www.slideshare.net/mizzy" target="_blank">Gosuke Miyashita</a></strong> </div>

<iframe width="640" height="360" src="http://www.youtube.com/embed/lxvT8mcilE4" frameborder="0" allowfullscreen></iframe>

<p>YAPC で Perl がまったく出てこない話をしたのは、これがはじめてです。こんなトークを採択してくださって、本当にありがとうございます。</p>

<p>内容的には、<a href="http://sapporo.rubykaigi.org/2012/ja/schedule/details/48.html">札幌 Ruby 会議 2012</a> でお話しした内容とほとんど同じで、Sqale で利用している技術のうち、主に以下の3つについてお話しました。</p>

<ul>
<li>LXC やカーネルパッチなどの OS レイヤー</li>
<li>ウェブプロキシのダイナミックルーティングを Nginx + Lua + Redis で実現</li>
<li>SSH のルーティングを如何に実現しているか</li>
</ul>

<p>スライドで紹介したリンクについて、こちらにもまとめておきます。</p>

<ul>
<li><a href="https://github.com/paperboy-sqale/sqale-patches">Sqale で利用しているカーネルパッチ</a></li>
<li><a href="https://github.com/hiboma">ひろやん</a> が Nginx + Lua + Redis について書いている <a href="http://d.hatena.ne.jp/hiboma/searchdiary?word=nginx%20lua%20redis">はてダエントリ</a></li>
<li><a href="https://github.com/mizzy/openssh-script-auth">OpenSSH Script Auth Patch</a></li>
<li>SSH ルーティングの着想を得た <a href="https://github.com/blog/530-how-we-made-github-fast">GitHub CTO のブログエントリ</a></li>
<li><a href="http://twitter.com/lamanotrama">@lamanotrama</a> さんによる <a href="https://docs.google.com/presentation/d/11QekgeD-ex8RWVABGWsn3VGcHWq6HDnSVZzZskPWNeg/present#slide=id.p">サーバ構築自動化(on AWS) Sqale の場合</a></li>
</ul>

<p>SSH Router 実現のためにあてている OpenSSH パッチ、似たようなパッチが実は、RedHat 系ディストリビューションで入る OpenSSH にあたっているのですが、期待している挙動と微妙に異なるため、独自にパッチをあてることにしました。</p>

<p>また、Heroku では SSH Router と同じことを実現するために <a href="http://twistedmatrix.com/trac/">Twisted</a> を使っている、という情報を刺身が中の人から仕入れてきたので調べてみたところ、<a href="http://twistedmatrix.com/documents/8.2.0/api/twisted.conch.ssh.html">twisted.conch.ssh</a>  という、SSHv2 実装がありました。</p>

<p>独自パッチをあてる方式は、OpenSSH へのアップデートに追従するのがきついので、Twisted ベースに切り替えることも検討しており、そのために <a href="https://github.com/mizzy/funnel">funnel</a> というものを開発中です。（まだ API 検討中なのと、動作確認コード書いただけですが。）</p>

<p>funnel という名称は、GitHub 社で Git のルーティングを実現しているライブラリの名前が Chimney で、それの類義語からとっています。アニメとかからとったわけではないです。</p>

<p>札幌 Ruby 会議 2012 でも、YAPC::Asia Tokyo 2012 でも聞き逃したけど、やっぱり生で聞きたい、という方、ご安心ください。12/7, 8 に行われる、RubyConf.tw 2012 でも <a href="https://github.com/rubytaiwan/rubyconf.tw/blob/master/2012/speakers/schedule.md">同じ内容でプレゼン</a> する予定です。台湾でお待ちしています。</p>

<p>札幌 Ruby 会議 2012 で登壇したペパボの同僚、<a href="https://github.com/hsbt">hsbt</a>, <a href="https://github.com/kentaro">kentaro</a>, <a href="https://github.com/kyanny">kyanny</a> も、同様に RubyConf.tw 2012 で登壇します。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[「Sqale の裏側」資料 at 札幌 Ruby 会議 2012]]></title>
    <link href="http://mizzy.org/blog/2012/09/15/1/" />
    <updated>2012-09-15T20:50:15+09:00</updated>
    <id>http://mizzy.org/blog/2012/09/15/1/</id>
    <content type="html"><![CDATA[
<p><a href="http://sapporo.rubykaigi.org/2012/ja/">札幌 Ruby 会議 2012</a> 、まだ会期中ですが、一足お先に帰ってきました。（大学の必修科目である、基礎数学のスクーリング授業が今日から3日間あるため。）</p>

<p>YAPC::Asia 2011 の個人スポンサーTシャツを着て参加したのですが、Rubyist の皆さんの心が広いためか、宮川神のご加護があったからか、殴られたりせずに済んで一安心。</p>

<p><a href="http://www.paperboy.co.jp/">ペパボ</a> は徐々に Ruby にスイッチしてきており、Ruby が動く PaaS である <a href="http://sqale.jp/">Sqale</a> もリリースされたことから、宣伝も兼ねて <a href="http://www.slideshare.net/mizzy/inside-sqales-backend-at-sapporo-ruby-kaigi-2012">Sqale の裏側</a> というタイトルで発表させてもらいました。</p>

<p>Sqale は、 Ruby が動く PaaS でもあるし、Sqale 自体の開発も、フロントもバックもバリバリ Ruby が使われているのですが、Ruby の話はほとんどしない、出てくるコードも Lua と C の方が Ruby よりも多い、というトーク内容でしたが、技術的にはなかなかおもしろい内容になってると思いますので、PaaS の裏側、特にインフラ寄りの部分ってどうなってるんだろう、と興味のある方は、ぜひ資料をご覧になってみてください。</p>

<p>発表の会場には、Sqale の競合である Heroku の中の人でもあり、Ruby のパパでもある Matz さんがいらっしゃったので、ノートPCに張った Heroku ステッカーを見せて、しっかりと媚びを売ることも忘れませんでした。</p>

<p><a href="http://yapcasia.org/2012/">YAPC::Asia Tokyo 2012</a> の前夜祭でも、同じ内容でお話させていただきます。Perl の方は Ruby 以上に関係がなく、Perl の話はまったくしませんし、基本的には札幌 Ruby 会議で話した内容とほとんど同じですので、みなさん僕の話は聞かずに、Perl Mongers との交流を楽しむことをお勧めします。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[スクショをとってコメントつけて Git にアップする Automator Application つくってみた]]></title>
    <link href="http://mizzy.org/blog/2012/08/26/1/" />
    <updated>2012-08-26T01:03:23+09:00</updated>
    <id>http://mizzy.org/blog/2012/08/26/1/</id>
    <content type="html"><![CDATA[
<p>Gyazo にコメントつけてアップしたい、といった要望があって、それと似たようなことを実現する Automator Application をつくってみた。</p>

<p>この Application を起動すると、</p>

<p><img src="/images/2012/08/screenshot01.png"></p>

<p>といったダイアログが出るので、領域選択してスクショを取得、すると、</p>

<p><img src="/images/2012/08/screenshot02.png"></p>

<p>とコメントダイアログが出るので、コメントを入力して OK をクリックすると、入力したコメントをコミットメッセージとして、git commit &amp; git push してくれる。</p>

<p>実際にこれを使ってスクショを GitHub にあげてみた履歴が<a href="https://github.com/mizzy/screenshots/commits/master">こちら</a> 。</p>

<p>Application は <a href="https://github.com/mizzy/screenshots-to-git-with-comments/zipball/master">こちらからダウンロード</a> できます。利用の際には、画像保存先となる Git リポジトリがあるディレクトリ部分を適宜修正してください。</p>

<p>以下、Automator Application の各パーツを参考のために貼り付けておきます。</p>

<p><img src="https://raw.github.com/mizzy/screenshots/master/shot-20120826010951.png"></p>

<p><img src="https://raw.github.com/mizzy/screenshots/master/shot-20120826011024.png"></p>

<p><img src="https://raw.github.com/mizzy/screenshots/master/shot-20120826011121.png"></p>

<p><img src="https://raw.github.com/mizzy/screenshots/master/shot-20120826011151.png"></p>

<p><img src="https://raw.github.com/mizzy/screenshots/master/shot-20120826011222.png"></p>

<p><img src="https://raw.github.com/mizzy/screenshots/master/shot.png"></p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[Paperboy's engineer evaluation system その後]]></title>
    <link href="http://mizzy.org/blog/2012/08/20/1/" />
    <updated>2012-08-20T23:59:43+09:00</updated>
    <id>http://mizzy.org/blog/2012/08/20/1/</id>
    <content type="html"><![CDATA[
<p><a href="/blog/2012/02/29/1/">Paperboy&#39;s engineer evaluation system</a> で書いた、ペパボの技術者評価制度、2回目の評価が完了しました。</p>

<p>前回は、</p>

<ol>
<li>シニア、またはアドバンスドシニアに上がりたい人には、自ら立候補してもらう。</li>
<li>立候補する人は、定められたフォーマットにしたがって、自分がそのポジションにふさわしいと思う理由や実績について Markdown で書き、指定した Git リポジトリに push する。（「定められたフォーマット」と言っても、最初に名前、次に希望のポジションを書いてもらうだけで、それ以外は自由。）</li>
<li>文書提出後、一人一人と面談を行う。</li>
<li>文書の内容と面談の結果にもとづいて、各人が提出した文書の末尾に、結果（通過 or 不通過）、評価ポイント、今後期待すること、を評価者が追記し、git push する。</li>
</ol>

<p>といった流れで、今回も基本的には同じ流れなのですが、2. の部分のやり方を変え、社内の Git リポジトリに push してもらう代わりに、GitHub 上にある文書提出用プライベートリポジトリを fork して、pull request を送ってもらう形にしました。</p>

<p>pull request をもらったら、一次評価者である自分が内容を確認し、ここをもう少し詳しく書いて、とか、こういうこともやってたから、盛り込んだらいいんじゃない、的なことを、pull request のコメントでやりとりして、修正してもらったらまた push、ってなことをやって、提出文書をブラッシュアップしてもらい、面談が終わったらマージ、fork 元のリポジトリにマージされた各人の提出文書に対して、評価結果とコメントを書き込む、という流れでした。</p>

<p>この、いったん提出してもらって、こちらから指摘して直してもらう、というのを、前回は個別に IRC とか口頭で話して、といった形でやってたんですが、今回は GitHub を利用することで、コミットの特定の行に対してピンポイントでコメントをつけることができて、すべて GitHub 上で完結できて便利でした。</p>

<p>また、GitHub のタイムラインを IRC にも流していたりするので、そのやりとりもすべて全社員が見る IRC チャンネルに流れる、という形で、よりオープンな評価ができたかな、と思っています。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[札幌Ruby会議2012 と YAPC::Asia Tokyo 2012 で登壇します]]></title>
    <link href="http://mizzy.org/blog/2012/08/07/1/" />
    <updated>2012-08-07T00:05:03+09:00</updated>
    <id>http://mizzy.org/blog/2012/08/07/1/</id>
    <content type="html"><![CDATA[
<p><a href="http://sapporo.rubykaigi.org/">札幌Ruby会議2012</a> と <a href="http://yapcasia.org/2012/">YAPC::Asia Tokyo 2012</a> で登壇することになりました。</p>

<p>札幌Ruby会議と YAPC::Asia Tokyo 2012 前夜祭では、「Sqale の裏側」というタイトルで、<a href="http://www.paperboy.co.jp/">ペパボ</a> が提供する PaaS「<a href="http://sqale.jp/">Sqale</a>」のアーキテクチャなどについて話します。</p>

<ul>
<li><a href="http://sapporo.rubykaigi.org/2012/ja/schedule/details/48.html">札幌Ruby会議2012でのトークアジェンダ</a></li>
<li><a href="http://yapcasia.org/2012/talk/show/048d468c-ab9e-11e1-a3b5-2a656aeab6a4">YAPC::Asia Tokyo 2012でのトークアジェンダ</a></li>
</ul>

<p>どちらのカンファレンスも内容的には同じ話をする予定で、Ruby/Perl 成分がほとんどなく、主に以下のようなキーワードについてお話をすることになるかと思います。</p>

<ul>
<li>Puppet/Chef</li>
<li>Resque</li>
<li>Unicorn</li>
<li>AWS(EC2, ELB, RDS, Route53)</li>
<li>Patched version of OpenSSH</li>
<li>Patched version of Linux kernel</li>
<li>OpenResty(ngx_openresty)</li>
<li>Redis</li>
<li>Git</li>
<li>LXC</li>
<li>etc.</li>
</ul>

<p>なので、Ruby や Perl も興味あるんだけど、PaaS の中身やミドルウェア、Linux カーネル などにより興味がある、という方はぜひ聞きに来てください。</p>

<p>また、<a href="http://yapcasia.org/2012/talk/show/79991522-db79-11e1-be22-0d4e6aeab6a4">YAPC::Asia Tokyo 2012 本編でも登壇</a> します。</p>

<p>こちらの方は、クロージング直前のいわゆるキーノートスピーチ的なもので、上の「Sqale の裏側」と異なり、技術的な成分はだいぶ薄めです。タイトルも「How Perl Changed My Life」と、どこかで聞いたことがある上に、時期を逸した感もありますが、タイトル通り、Perl や Perl コミュニティが自分の技術者人生に与えた影響についてお話させて頂く予定です。</p>

<p>このクロージング直前の枠、過去のトークを並べてみると、</p>

<ul>
<li><a href="http://tokyo.yapcasia.org/sessions/keynote.html">Keynote</a> by Larry Wall 氏</li>
<li><a href="http://tokyo2007.yapcasia.org/sessions/2007/02/perl_program_repair_shop_and_r.html">Perl Program Repair Shop and Red Flags</a> by Mark Jason Dominus 氏</li>
<li><a href="http://conferences.yapcasia.org/ya2008/user/780">Perl Is unDead</a> by Michael Schwern 氏</li>
<li><a href="http://conferences.yapcasia.org/ya2009/user/1681">Why I Stick With Perl</a> by Jonathan Rockway 氏</li>
<li><a href="http://yapcasia.org/2010/talks/63D5EA98-BC8C-11DF-8791-B9FC0F276C45">The Tale of Plack</a> by miyagawa さん</li>
<li><a href="http://yapcasia.org/2011/talk/66">Managing A Band Of Hackers</a> by hidek さん </li>
</ul>

<p>とまあすごい顔ぶれで、なんで自分なんかが選ばれたんだろう、という感じなんですが、気負わず自分らしい話ができればいいな、と思っています。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[「Mobageを支える技術」を献本いただいた]]></title>
    <link href="http://mizzy.org/blog/2012/06/12/1/" />
    <updated>2012-06-12T22:02:03+09:00</updated>
    <id>http://mizzy.org/blog/2012/06/12/1/</id>
    <content type="html"><![CDATA[
<p><img src="http://distilleryimage6.s3.amazonaws.com/871bb9a0b47511e1aebc1231381b647a_7.jpg"></p>

<p><a href="http://gihyo.jp/book/2012/978-4-7741-5111-3">「Mobageを支える技術 ～ソーシャルゲームの舞台裏～」</a> を <a href="http://twitter.com/nekokak">@nekokak</a> さんよりご献本いただきました。ありがとうございます！</p>

<p>写真は <a href="http://kentaro.hatenablog.com/">antipop</a> (<a href="http://twitter.com/kentaro">@kentaro</a>)さん撮影。</p>

<p>先週会社に届いてたのですが、福岡出張だったのと、昨日は体調不良により一回休みだったので、本日ようやく手にしました。</p>

<p>書評系のエントリ書くのは苦手で、薄っぺらいことしか書けないので、とりあえず宣伝＆自慢のみです。</p>

<p>トランスフォーマーの被り物にはなんの意味もありません。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[37歳の大学入学 ー 出願から入学まで]]></title>
    <link href="http://mizzy.org/blog/2012/04/25/1/" />
    <updated>2012-04-25T22:46:53+09:00</updated>
    <id>http://mizzy.org/blog/2012/04/25/1/</id>
    <content type="html"><![CDATA[
<p><a href="/blog/2012/04/24/2/">前回</a> は大学選びについて書いたので、今回は大学に入学するまでの過程について書きます。</p>

<p>大学を決めたら次にやることは、募集要項や出願書類などの資料請求ですね。自分は <a href="http://www.amazon.co.jp/dp/4862073735">社会人&amp;学生のための大学・大学院選び 2012年度版</a> に掲載されている資料請求用サイトから請求しました。複数の学校にまとめて請求ができるので便利です。（念のため、サイバー大学の資料も併せて請求しました。）1 校だけであれば、ウェブサイトに資料請求窓口がある大学もありますので、そちらを利用しても良いですね。</p>

<p>資料が届いたら、出願書類を揃えていきます。自分が提出したのは、以下のようなものです。正科生なのか科目履修生なのかとか、2年次以降からの編入なのかとか、人によって多少異なります。</p>

<ul>
<li><p>資料に含まれているもので、必要事項を記入したり、写真や切手を貼付して提出したもの</p>

<ul>
<li>志望理由書（400字程度）</li>
<li>通知カード

<ul>
<li>自分の住所氏名を書いた宛名シールですね。入学許可書などが同封された封筒に貼られます。</li>
</ul></li>
<li>出願書類通知書

<ul>
<li>出願書類を大学側で受け取ったあと、書類に不備がなかったかどうかを知らせてくれるハガキです。切手を貼って提出します。</li>
</ul></li>
<li>身上調査書および誓約書

<ul>
<li>身上調査書には、住所、氏名、学歴、緊急連絡先、家族構成といったものを記入します。</li>
<li>誓約書には、自分の住所、氏名、捺印等の他に、保証人の住所、氏名、捺印等も必要です。保証人は近くに住む伯父にお願いしました。</li>
</ul></li>
<li>入学時アンケート</li>
</ul></li>
<li><p>お金の振込みが必要なもの</p>

<ul>
<li>志願票

<ul>
<li>振込依頼書とセットになっていて、金融機関で収納印を押してもらう必要があります。</li>
<li>自分の場合、正科生の2年次編入学で、選考料や授業料など含めて、20 万円弱でした。入学が許可されなかったり、辞退した場合には、このうちの授業料分およそ15 万円は返却されるようです。</li>
</ul></li>
</ul></li>
<li><p>自分で取り寄せたりしたもの</p>

<ul>
<li>卒業証明書</li>
<li>成績証明書</li>
<li>健康診断書

<ul>
<li>健康診断書は、所定の用紙があり、3ヶ月以内に発行のもの、という条件があるため、会社で受けたものは使えませんでした。また、定められた項目がどの病院でも診断してもらえる、というわけではないですし、診断には予約が必要だったりするので、これは早めに用意するのがいいですね。</li>
</ul></li>
<li>講義概要またはシラバス（学士入学・編入学希望者のみ）

<ul>
<li>これは、編入学の場合に、以前の大学で取得した単位を、入学する大学の単位として認定してもらうために必要になるのですが、提出しないと認定してもらえない、というわけではないです。成績証明書からわかる科目名だけでも認定してもらえます。成績証明書だけでは不足の場合に、補強するための資料として必要なようです。自分は提出していません。</li>
</ul></li>
</ul></li>
</ul>

<p>これらを提出した後に、1, 2 週間ほどで出願書類通知書が返送されてきて、提出書類に特に不備はなかったことと、入学許可書等の発送は、◯月×日頃になる、ということが知らされました。無試験であり、2年次編入学の募集枠は若干名となっていて、合格基準がさっぱりわからず、書類送付してから若干不安な日々を送っていたのですが、この通知書によって、どうやら入学が許可されるらしい、ということがわかり、一安心でした。</p>

<p>その後、入学許可書等が予定通り送られ、同封された紙に「単位認定を希望するものは出身大学のシラバスを送付してください」と書かれているのですが、事情により出身大学のシラバスの取得が厳しそうだったため、教務課にメールで確認してみたところ、成績証明書だけでも、上限の32単位まで認定してもらえる、ということがわかり、シラバスを送付する必要はありませんでした。</p>

<p>次回は科目履修や学習計画について書く予定です。</p>

]]></content>
  </entry>


</feed>
