<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Gosuke Miyashita]]></title>
  <link href="http://mizzy.org/atom.xml" rel="self"/>
  <link href="http://mizzy.org/"/>
  <updated>2014-06-22T19:21:44+09:00</updated>
  <id>http://mizzy.org/</id>
  <author>
    <name><![CDATA[Gosuke Miyashita]]></name>
    
  </author>
  <generator uri="https://github.com/mizzy/stellar/">Stellar</generator>


  <entry>
    <title type="html"><![CDATA[Dockerコンテナに入るなら SSH より nsinit が良さそう]]></title>
    <link href="http://mizzy.org/blog/2014/06/22/1/" />
    <updated>2014-06-22T19:21:44+09:00</updated>
    <id>http://mizzy.org/blog/2014/06/22/1/</id>
    <content type="html"><![CDATA[
<h2>追記</h2>

<p><a href="http://b.hatena.ne.jp/entry/mizzy.org/blog/2014/06/22/1/">はてブでつっこみもらいました</a> が、実行するカレントディレクトリは /var/lib/docker/execdriver/native/$id を使うのが正しいようです。（情報読み違えてた。）こちらには <code>container.json</code> があるので、ソースツリーからコピーしてくる必要ないですね。</p>

<p>また、コンテナ ID 取得は、<code>docker ps -q --no-trunc</code> の方が良い、とも教えていただきました。</p>

<p>つっこみにしたがって、最後の方の説明とシェル関数書き換えました。</p>

<p>つっこみありがとうございます！</p>

<hr>

<h2>tl; dr</h2>

<p>タイトルまま</p>

<hr>

<h2>経緯</h2>

<p>Docker でつくったコンテナの中に入って状態を確認するために、コンテナ内で sshd を立ち上げてアクセスする、ってなことを以前やってたんですが、コンテナ内で sshd を立ち上げる、というやり方がいまいちだし、そもそもコンテナの仕組みから考えれば、別に sshd を立ち上げなくても、コンテナと同じ namespace と rootfs に bash なりのプロセスを閉じ込めてやれば良いわけで、そういったことは既に考えている人はいるだろうし、ツールとかありそうだな、ってことで、</p>

<blockquote class="twitter-tweet" lang="en"><p>Dockerで中を見たいコンテナのPID namespaceとchrootをカレントシェルに割り当てることが簡単にできるようなツールがあれば、中でsshとか立てなくていいかな。</p>&mdash; Gosuke Miyashita (@gosukenator) <a href="https://twitter.com/gosukenator/statuses/479289206108217344">June 18, 2014</a></blockquote>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>とつぶやいてみたら、</p>

<blockquote class="twitter-tweet" data-conversation="none" lang="en"><p><a href="https://twitter.com/gosukenator">@gosukenator</a> nsenter -- chroot /bin/bash とかでいけないですかねー</p>&mdash; TenForward (@ten_forward) <a href="https://twitter.com/ten_forward/statuses/479297375115042817">June 18, 2014</a></blockquote>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>と、nsenter なるものの存在を教えて頂いた。</p>

<blockquote class="twitter-tweet" data-conversation="none" lang="en"><p><a href="https://twitter.com/gosukenator">@gosukenator</a> nsenter はちょっと新しい util-linux にしかないので、ソースからコンパイルする必要あると思います。&#10;RHEL/CentOS7 は知らないですけど、Ubuntu 14.04 にはありませんでした。</p>&mdash; TenForward (@ten_forward) <a href="https://twitter.com/ten_forward/statuses/479297956969869312">June 18, 2014</a></blockquote>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>で、これを見るとちょっと面倒かな、と思ったけど、</p>

<blockquote class="twitter-tweet" data-conversation="none" lang="en"><p><a href="https://twitter.com/gosukenator">@gosukenator</a> docker 的にはそのページに書かれている nsinit を使うのが正解かもしれませんね。docker のソースツリーに入ってるツールですし :-)&#10;(nsinit すっかり忘れてた)</p>&mdash; TenForward (@ten_forward) <a href="https://twitter.com/ten_forward/statuses/479304239584251904">June 18, 2014</a></blockquote>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>この nsinit は golang 製なので、golang が動く環境であれば go get で入れることができて楽そうなので、nsinit を試してみることにした。</p>

<hr>

<h2>nsinit の使い方</h2>

<p>golang 環境は既に整っていて、GOPATH が設定されていて、PATH に $GOPATH/bin が含まれている、という前提。</p>

<p><code>go get</code> で <code>nsinit</code> を入れる。</p>

<pre><code>$ go get github.com/docker/libcontainer/nsinit
</code></pre>

<p>こんな感じで実行。</p>

<pre><code>$ sudo -s
# docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
917756ba04a2        ubuntu:14.04        /bin/bash           51 minutes ago      Up 51 minutes                           lonely_tesla
# cd /var/lib/docker/execdriver/native/9177*
# nsinit exec /bin/bash
daemon@koye:/$
</code></pre>

<p>cd して nsinit、ってやるのは、一般ユーザからだとパーミッションの関係でタブ補完が効かなくてだるいので、シェル関数書いてみた。</p>

<pre><code>docker-attach()
{
  id=`sudo docker ps -q --no-trunc $1`
  root=/var/lib/docker/execdriver/native/$id
  sudo sh -c &quot;cd $root &amp;&amp; $GOPATH/bin/nsinit exec $2&quot;
}
</code></pre>

<p>この関数つかって、コンテナIDと実行するプログラムを与えれば、一発でコンテナの中に入れて便利。</p>

<pre><code>vagrant@vagrant:~$ docker-attach 9177 /bin/bash
daemon@koye:/$
daemon@koye:/$ ps -ef
UID        PID  PPID  C STIME TTY          TIME CMD
daemon       1     0  0 10:38 ?        00:00:00 /bin/bash
daemon      14     1  0 10:44 ?        00:00:00 ps -ef
</code></pre>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[WEB+DB PRESS Vol.80 テスト駆動インフラ記事補足]]></title>
    <link href="http://mizzy.org/blog/2014/04/21/1/" />
    <updated>2014-04-21T22:08:12+09:00</updated>
    <id>http://mizzy.org/blog/2014/04/21/1/</id>
    <content type="html"><![CDATA[
<p>4/24(木) 発売の WEB+DB PRESS Vol.80 に <a href="/blog/2014/04/19/1/">テスト駆動インフラ&amp;CIの記事を書いた</a> というエントリを先日あげましたが、記事に対する更なる補足を。</p>

<p>記事中に DigitalOcean に公開鍵を手動で登録する手順があるのですが、実はこの手順、 vagrant-digitalocean が自動でやってくれるようなので、手動でやらなくても良いようです。</p>

<p>ソースコードを読んでみたところ、vagrant-digitalocean は、<code>ssh_keyname</code> で指定された名前の公開鍵が DigitalOcean 上に登録されていなければ、<code>private_key_path</code> で設定されたファイル名に <code>.pub</code> をつけたファイルの内容を登録する、という動きをするようです。</p>

<p>本特集の手順だと、手動で DigitalOcean 上に公開鍵を登録しており、vagrant-digitalocean が登録することはないため、wercker.yml で公開鍵を環境変数から取得して id_rsa.pub に書き込む、というステップは必要ない（というか、置かない方がセキュリティ上望ましい、と <a href="https://twitter.com/matsumotory">@matsumotory</a> さんから指摘がありました）はずなのですが、どうやら vagrant-digitalocean が登録する/しないに関わらず、設定内容のバリデーション時に、公開鍵ファイルの存在をチェックして、ないとエラーで処理が止まってしまうため、必ずこのステップが必要なようです。</p>

<p>というわけで、セキュリティ的に望ましいのは、「手動でDigitalOceanに公開鍵を登録する」かつ「wercker.yml で id_rsa.pub ファイルを生成しない」なのですが、上記のような理由により、中途半端な感じになってしまって申し訳ないです。</p>

<p>Wercker 上で生成した鍵を、CI 用の VM でしか使わないようにすれば、例え鍵が漏れたところで大きな問題にはならないと思いますが、@matsumotory さんから指摘がありましたので、こちらで補足させて頂くことにしました。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[WEB+DB PRESS Vol.80 に「実践 テスト駆動インフラ＆CI」という特集記事を書いた]]></title>
    <link href="http://mizzy.org/blog/2014/04/19/1/" />
    <updated>2014-04-19T23:35:00+09:00</updated>
    <id>http://mizzy.org/blog/2014/04/19/1/</id>
    <content type="html"><![CDATA[
<p>最初に書いておくと、発売は4/24(木)です。（こういうエントリを見て、お、もう出たのか、と思って書店に行ったらまだだった、みたいな経験よくあるのであらかじめ。）</p>

<p><a href="http://gihyo.jp/magazine/wdpress/archive/2014/vol80"><img src="http://image.gihyo.co.jp/assets/images/cover/2014/thumb/TH160_9784774163987.jpg" /></a></p>

<p>Software Design 誌では何度か書かせてもらっていたのですが、WEB+DB PRESS は初めてです。（<a href="http://gihyo.jp/lifestyle/serial/01/shukatsu_joshi/0004">インタビュー記事</a>が載ったり、他の方の記事で<a href="https://gihyo.jp/dev/feature/01/webservice-guide/0002">自分の名前が出たり</a>、<a href="http://gihyo.jp/magazine/wdpress/archive/2013/vol76">自分が開発してるソフトウェアをとりあげてもらったり</a>はしましたが。）</p>

<p>で、内容は読んでもらうとして、補足を。</p>

<h2>サンプルで利用してる CentOS がなぜ最新ではなく 6.4 なのか</h2>

<p>執筆当初は、最新バージョンである 6.5 で進めていたのですが、DigitalOcean 上にある 6.5 のイメージには rsync が入っておらず、Vagrant によるプロビジョニングがエラーになる、ということが起きたため、rsync が入っている 6.4 に変更しました。</p>

<p>6.5 のままで行くためには、元のイメージに rsync を入れて、そのスナップショットをとって…みたいな作業が必要になって、それは本特集の趣旨から脱線するので、6.4 で行くことにしました。</p>

<p>Vagrant 1.5 からは Box に rsync が入っていない場合に自動で入れてくれる機能があるのですが、<a href="https://github.com/smdahlen/vagrant-digitalocean">vagrant-digitalocean</a> を利用していると、この機能が発動しないんですよね。で、vagrant-digitalocean 利用時も自動で rsync を入れるための<a href="https://github.com/smdahlen/vagrant-digitalocean/pull/103">プルリクエスト</a> を送っていて、+1 がいくつかついてるけど、まだマージされてないです。これがマージされてリリースされれば、rsync が入っていないイメージであっても、本特集に書いた手順そのままでいけるようになるはずです。</p>

<h2>サンプルコード</h2>

<p><a href="http://gihyo.jp/magazine/wdpress/archive/2014/vol80/support#supportDownload">gihyo.jp のサポートページ</a> でも公開されてますが、<a href="https://github.com/mizzy/test-driven-infra">GitHub 上にも置いておきます</a>。本特集通りに操作した履歴になっていますし、<a href="https://github.com/mizzy/test-driven-infra/releases">章ごとにタグを打ってあります</a>。</p>

<h2>その他</h2>

<p>その他、読んでいて何か気になる点、お気づきの点などありましたら、<a href="https://twitter.com/gosukenator">@gosukenator</a> までお知らせください。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[フリーになったので開業してみた]]></title>
    <link href="http://mizzy.org/blog/2014/04/18/1/" />
    <updated>2014-04-18T13:17:46+09:00</updated>
    <id>http://mizzy.org/blog/2014/04/18/1/</id>
    <content type="html"><![CDATA[
<p><a href="/blog/2014/04/01/1/">先日のエントリ</a> で書いたとおり、今は基本フルタイムでクックパッドで仕事してるけど、実態はフリーランスなので、税金まわりちゃんとしないとなー、ということで、個人事業の開業届出書と青色申告承認申請書を提出してきた。</p>

<p>で、個人事業主は屋号をつけてもつけなくてもいいんだけど、つけられるんならせっかくだし、ってことで、<a href="http://serverspec-operations.com/">Serverspec Operations</a> という屋号にしてみた。</p>

<p>勘のいい人なら気づくかもしれないけど、 <a href="http://hw-ops.com/">Heavy Water Operations</a> からのインスパイア。serverspec も絡めた、インフラの構築や運用の自動化、というのをメインのテーマにこの屋号で活動するつもりなんだけど、やってる内容や利用する技術が、この会社ととても近いし、リスペクトもしているので。</p>

<p>「インフラ」といいつつも、その上のアプリケーションレイヤーとは断続しているわけではなく連続したものであり、かつどちらが上とか下とか先とか後とかではなく、ひとつのサイクルを形成するものなので、「インフラ」を中心としつつも、アプリケーションも含め全体の自動化・省力化、というものをテーマに、技術やツールの導入支援、トレーニング、啓蒙なんかをやっていこうかなー、みたいなことを考えてる。特に、<a href="http://mizzy.tumblr.com/post/37557718970/its-not-abstraction-its-not-even">John Allspaw 氏が言うように</a>、大事なのはツールとかプロセスとかではなく、その背景にあるカルチャーなので、そういったカルチャーをいろんなところに広める、みたいな活動ができるといいな、と。</p>

<p>本格的にこっちの道で生きていくかどうかはまだ決めていなくて、今は様子見というか、こういったことに対する需要があるかどうか、世間の反応を見つつ、フリーという状況を活かして、いろいろやってみよう、といった感じ。</p>

<p>ちなみに、ロゴやサイトのデザインは、<a href="http://iroirodesign.com/">いろいろデザイン</a> の <a href="https://twitter.com/nagayama">@nagayama</a> 氏にお願いしたら、想像以上に高いクオリティに仕上げてくれて大満足しているので、ロゴとかはみんなここに発注したらいいと思う。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[ChefConf 2014 に来てます]]></title>
    <link href="http://mizzy.org/blog/2014/04/17/1/" />
    <updated>2014-04-17T10:22:04+09:00</updated>
    <id>http://mizzy.org/blog/2014/04/17/1/</id>
    <content type="html"><![CDATA[
<p>今日は最終日で、昨日は Serverspec: The Simplest Server Testing Tool Ever というタイトルでプレゼンしてきました。海外でははじめての serverspec プレゼンなので、もっと基本的な、具体的な使い方とかデモといった内容にした方がいいのかなー、と思いつつも、そういうのはオフィシャルサイトとか見れば割と十分だし、自分以外の人でも話せる内容なので、開発者ならではの、開発をはじめたきっかけとか、開発する上での哲学とか、今後どうしていきたいのか、みたいな話をしました。(<a href="http://memo.sanographix.net/post/82160791768">大体いい感じになるKeynoteテンプレート「Azusa」</a> を使わせてもらいました。ありがとうございます。あと、mirakui さんの真似して entypo や fontawesome も使ってみました。)</p>

<div style="width: 65%">
<script async class="speakerdeck-embed" data-id="32f62ac0a7db0131c1eb06aa2e69a5d0" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"></script>
</div>

<p>英語台本棒読みだし、Splunk の方から質問された内容が、なんかテストカバレッジのことを聞かれてるんだけど、全然理解できなくて若干へこんでいたら、<a href="https://twitter.com/yumano">@yumano</a> さんに間に入っていただいて話を聞いてみると、serverspec そのもののテストカバレッジの話かと思ってたら、Chef レシピに対するカバレッジ、という話で、言ってることはまあわかるようなわからないような、という感じで、日本語で聞かれたとしてもすぐに把握できなさそうな内容だなー、みたいなことがあったりしつつも、プレゼン中に serverspec を知ってる人、使ってる人に手を挙げてもらったら、ちらほらいらっしゃったり、プレゼン後も何人かの方が、serverspec 使ってるよ、いいツールだね、と声をかけてくれたり、握手したり、一緒に写真を撮ったり、他の方のプレゼンでも serverspec について言及されたりで、海外でも使われてるなー、というのは以前からわかってはいたけど、それを強く実感しました。</p>

<p>特に今回一番お会いしたかった、<a href="http://kitchen.ci/">Test Kitchen</a> Author の <a href="https://twitter.com/fnichol">@fnichol</a> さんとお話しすることができて、serverspec のステッカーを渡したらとても喜んでくれ、代わりに Test Kitchen や Sensu のステッカーをもらうことができました。（Sensu Author の <a href="https://twitter.com/portertech">@portertech</a> さんは、@fnichol さんと同じ <a href="http://hw-ops.com/">Heavy Water Operations, LLC</a> 所属）</p>

<p><img src="https://pbs.twimg.com/media/BlYRAFjCcAAO1NL.jpg" alt="stickers"></p>

<p>（この並びだと、mirakui さんが便利 DevOps ツール四天王の一角を占めてるような感じになってる。）</p>

<p>今日もカンファレンス会場をふらふらしていて、@fnichol さんが何人かの方と話しているところに通りがかったら、今ちょうど serverspec の話をしてたんだよ、みたいなことがあって、その場にいた方にステッカー渡したりしてました。</p>

<p>それから、Chef Original Author で CTO でもある <a href="https://twitter.com/adamhjk">@adamhjk</a> 氏と一緒に写真を撮りました。（しかも撮ってくれたのが CEO の <a href="https://twitter.com/barry_crist">@barry_crist</a> 氏）</p>

<blockquote class="twitter-tweet" lang="en"><p>With .<a href="https://twitter.com/adamhjk">@adamhjk</a> taken by .<a href="https://twitter.com/barry_crist">@barry_crist</a> . Thanks a lot! <a href="http://t.co/emSqlVrvZM">pic.twitter.com/emSqlVrvZM</a></p>&mdash; Gosuke Miyashita (@gosukenator) <a href="https://twitter.com/gosukenator/statuses/456861368751124480">April 17, 2014</a></blockquote>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>また、serverspec を自社プロジェクトに組み込もうとしてるところなんだけど、時間あったらちょっと話できないか、みたいなメールが来て、すぐに会って話したり、といったこともありました。</p>

<p>カンファレンス以外にも、初日は Oracle Arena に NBA を観に行ったり、<a href="https://twitter.com/kosaki55tea">@kosaki55tea</a> さんに誘って頂いておいしいお肉を食べに行ったり、前々職時代に大変お世話になった方に蟹をごちそうしてもらったり、今日の夕方は <a href="https://twitter.com/niw">@niw</a> さんからお誘い頂いたので Twitter 社に遊びに行く予定だったりと、明日帰国という短いサンフランシスコ滞在期間だけど、とても満喫しています。（<a href="https://twitter.com/miyagawa">@miyagawa</a> さんとはすれ違いになってしまってお会いできなかったのは残念でしたが。）</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[ChefConf 2014 で serverspec の話をします]]></title>
    <link href="http://mizzy.org/blog/2014/04/13/1/" />
    <updated>2014-04-13T15:01:04+09:00</updated>
    <id>http://mizzy.org/blog/2014/04/13/1/</id>
    <content type="html"><![CDATA[
<p>CFP に応募したら通ってしまったので、4/15-17 にサンフランシスコで開催される <a href="http://chefconf.opscode.com/">#ChefConf 2014</a> で <a href="http://chefconf2014.busyconf.com/schedule#activity_52d53866080f0e0010000242">Serverspec: The Simplest Server Testing Tool Ever</a> というタイトルでプレゼンします。</p>

<p>ちなみに、昨年の PuppetConf 2013 の CFP にも応募したのですが、そちらはリジェクトされました。</p>

<p>他にも日本から行かれる方がいらっしゃると思いますが、見かけたらお気軽にお声がけください。</p>

<p>また、15日の日中と17日の夜は今のところ暇なので、会ってやってもいいよ、とか、うちの会社に遊びにおいでよ、という方がいらっしゃったら、ぜひご連絡ください。（15日は発表スライドづくりでそれどころじゃないかもしれませんが。）</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[4月からクックパッドで仕事してます]]></title>
    <link href="http://mizzy.org/blog/2014/04/01/1/" />
    <updated>2014-04-01T00:12:43+09:00</updated>
    <id>http://mizzy.org/blog/2014/04/01/1/</id>
    <content type="html"><![CDATA[
<blockquote class="twitter-tweet" lang="en"><p>株式会社はてなに入社しました。</p>&mdash; Gosuke Miyashita (@gosukenator) <a href="https://twitter.com/gosukenator/statuses/450665235200753665">March 31, 2014</a></blockquote>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>↑はエイプリルフールネタですが。</p>

<p>色々あって、3月に無職になって、4月からクックパッドで仕事してます。</p>

<p>基本的にはフルタイムコミットなんですが、諸事情により業務委託契約なので、実質フリーランスですね。</p>

<p>この機会に色々な可能性を模索したいので、何か面白そうな仕事があったら <a href="https://twitter.com/gosukenator">Twitter</a> とか <a href="https://www.facebook.com/gosukenator">Facebook</a> とか <a href="mailto:gosukenator@gmail.com">メール</a> などでご連絡ください。</p>

<p>特に以下のような仕事は自分の価値を活かせるんじゃないかと思ってます。</p>

<ul>
<li>Chef, Puppet, Ansible といったサーバ構成管理ツールの導入支援</li>
<li>serverspecをベースとしたテスト駆動インフラやインフラCIの導入支援</li>
<li>要件に合わせた serverspec のカスタマイズ（serverspec 本体や、テストで利用する Rakefile や spec_helper など）</li>
</ul>

<p>また、以下のような経験もありますので、この経験が役立ちそうな場があれば、お気軽に声をかけてください。</p>

<ul>
<li>Netscapeサーバ製品のプリセールスエンジニア

<ul>
<li>ウェブサーバ、メールサーバ、LDAPサーバなど</li>
<li>営業同行しての客先提案、デモや導入コンサル、構築・移行作業、保守運用等</li>
<li>この業務の関連で1年ほど US Netscape に出向経験あり</li>
</ul></li>
<li>Perl, Ruby, PHP によるウェブアプリケーション開発</li>
<li><a href="http://www.slideshare.net/mizzy/2008-30days-album-presentation">写真共有サービスの立ち上げ</a>

<ul>
<li>アーキテクト、ストレージAPIの開発など</li>
</ul></li>
<li><a href="http://japan.cnet.com/extra/paperboy_0907/story/0,3800098768,20394957,00.htm">個人向けレンタルサーバの大規模リニューアル</a>

<ul>
<li>アーキテクト、API仕様策定とサーバサイドのプロトタイプ開発、サーバ構築自動化など</li>
</ul></li>
<li><a href="http://www.slideshare.net/mizzy/inside-sqales-backend-at-rubyconf-taiwan-2012">PaaS の立ち上げ</a>

<ul>
<li>アーキテクト、プロトタイプ実装、AMIの作成、カーネルパッチ作成など</li>
</ul></li>
<li>技術者評価制度の導入と運用

<ul>
<li><a href="http://mizzy.org/blog/2012/01/17/1/">http://mizzy.org/blog/2012/01/17/1/</a></li>
<li><a href="http://mizzy.org/blog/2012/02/29/1/">http://mizzy.org/blog/2012/02/29/1/</a></li>
</ul></li>
<li>技術基盤の整備

<ul>
<li>Subversion + Trac, IRC, Puppet 等の導入（2007年）</li>
<li>インターナルクラウドツール <a href="http://www.slideshare.net/mizzy/maglica-techkayac">Maglica</a> の開発と導入（2011年）</li>
<li><a href="http://mizzy.org/blog/2012/11/02/1/">GitHub の導入</a>（2012年）

<ul>
<li>その後 GitHub Enterprise の導入や運用も</li>
</ul></li>
<li>技術基盤チームの立ち上げ</li>
</ul></li>
<li>技術系イベントでの登壇

<ul>
<li><a href="http://www.slideshare.net/mizzy">SlideShare</a></li>
<li><a href="https://speakerdeck.com/mizzy">Speaker Deck</a></li>
<li>海外での登壇経験あり

<ul>
<li><a href="http://vimeo.com/groups/rubytw/videos/57571819">RubyConf Taiwan 2012</a></li>
<li><a href="http://chefconf2014.busyconf.com/schedule#activity_52d53866080f0e0010000242">#ChefConf 2014</a>（予定）</li>
</ul></li>
</ul></li>
<li>執筆

<ul>
<li><a href="http://gihyo.jp/admin/serial/01/puppet">オープンソースなシステム自動管理ツール Puppet：連載｜gihyo.jp … 技術評論社</a></li>
<li><a href="http://gihyo.jp/magazine/SD/archive/2007/200712">Software Design 2007年12月号 Puppet 特集記事</a></li>
<li><a href="http://gihyo.jp/magazine/SD/archive/2009/200904">Software Design 2009年4月号 第2特集 サーバエンジニアがプログラムを知る意味</a></li>
</ul></li>
<li>OSS 活動

<ul>
<li><a href="https://metacpan.org/author/MIZZY">CPAN</a></li>
<li><a href="http://github.com/mizzy">GitHub</a></li>
<li><a href="http://serverspec.org/">serverspec</a>

<ul>
<li><a href="http://sourceforge.jp/magazine/14/01/29/190000">Black Duck Open Source Rookies of the Year 2013 受賞</a></li>
</ul></li>
</ul></li>
</ul>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[serverspec の論文公開します]]></title>
    <link href="http://mizzy.org/blog/2014/03/11/1/" />
    <updated>2014-03-11T21:42:00+09:00</updated>
    <id>http://mizzy.org/blog/2014/03/11/1/</id>
    <content type="html"><![CDATA[
<p><a href="http://serverspec.org">serverspec</a> に関する論文を、<a href="http://twitter.com/kentaro">あんちぽ</a> さん 、<a href="http://twitter.com/matsumotory">@matsumotory</a> さんと共著で書きましたので、<a href="https://github.com/mizzy/serverspec-thesis">GitHubリポジトリ</a> ごと公開しておきます。</p>

<p><a href="https://github.com/mizzy/serverspec-thesis/blob/master/serverspec.pdf?raw=true">論文のPDF</a> だけではなく、PDF 生成前の TeX ファイルとかもありますし、<a href="https://github.com/mizzy/serverspec-thesis/issues">Issues</a> を見ると、どんな風に執筆を進めていったのかが垣間見えます。</p>

<p>また、事情により研究会発表は欠席してしまったのですが、発表用スライドは作成したので、せっかくなのでアップしておきます。</p>

<div style="width: 65%">
<script async class="speakerdeck-embed" data-id="282f60708b4a0131b08432e8da2a7164" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"></script>
</div>

<p>ご意見などありましたら、ブログ、はてブコメント、Twitter、GitHub Issue などでお聞かせ頂けると大変うれしいです。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[Developers Summit 2014 で「サーバプロビジョニングのこれまでとこれから」という発表を行いました]]></title>
    <link href="http://mizzy.org/blog/2014/02/14/1/" />
    <updated>2014-02-14T01:33:52+09:00</updated>
    <id>http://mizzy.org/blog/2014/02/14/1/</id>
    <content type="html"><![CDATA[
<div style="width: 65%">
<script async class="speakerdeck-embed" data-id="3fc5c5d07684013148646268bd6e389b" data-ratio="1.3333333333333333" src="//speakerdeck.com/assets/embed.js"></script>
</div>

<p>内容自体は基本的に、<a href="http://atnd.org/event/E0021065">第5弾 週末ランサーズ</a> にお邪魔した時に <a href="https://speakerdeck.com/mizzy/future-of-server-provisioning">お話した資料</a> と同じなんですが、この時よりも時間が少し長かったので、多少内容を追加しているのと、当時自分の中でうまく整理できてなかったけど、今は多少クリアになった部分もあって、そういった内容を盛り込んだりしてみました。</p>

<ul>
<li><a href="http://togetter.com/li/628616">Togetter まとめ</a></li>
<li><a href="http://d.hatena.ne.jp/rx7/20140213/p1">NAMIKAWA さんによるまとめ</a></li>
</ul>

<p>一点お詫びしたいのは、登壇者に質問ができる Ask the Speaker というコーナーがあって、セッションが終わった後はそちらに移動、という段取りだったのですが、裏でやっていた <a href="http://event.shoeisha.jp/devsumi/20140213/session/394/">OSS コミッタ大集合</a> の方でも登壇するために終了後すぐに E 会場に向かったため、Ask the Speaker コーナーに行けませんでした。もし質問するためにいらしてくださった方がいましたら、本当に申し訳ないです。</p>

<p>今回デブサミに登壇させて頂いた経緯については、会場で <a href="http://twitter.com/t_wada">@t_wada</a> さんからも説明があったのですが、<a href="http://atnd.org/events/40914">Testing Casual Talks #1</a> でご一緒させて頂いたり、<a href="http://mizzy.org/blog/2013/10/29/1/">インフラ系技術の流れ</a> というブログエントリを読んでくださった @t_wada さんから直々に依頼があり、二つ返事で OK させて頂いた、という次第です。</p>

<p>お話したテーマのうちのひとつである「テスト駆動インフラ」は、Puppet を使い始めてから割とすぐに考えはじめて、<a href="http://d.hatena.ne.jp/dayflower/20070405/1175782564#c">2007 年には「テスト駆動サーバ構築」という言葉を使ったり</a> してました。（当時はインフラという言葉が今のような使われ方をしていなかった。）</p>

<p>で、それを実現するための <a href="http://tokyo2007.yapcasia.org/sessions/2007/02/assurer_a_pluggable_server_tes.html">Assurer</a> というツールを 2007 年につくって YAPC で発表したものの、実用には至らず頓挫した、という経緯があったりします。</p>

<p>それから実に6年もかかって serverspec が生まれたわけですが、テスト駆動インフラという言葉は割と認知されてきたのかな、という状況で、言葉尻をとらえて「インフラをテスト駆動？何それpgr」みたいな意見も見かける中、@t_wada さん直々の登壇依頼が来た、という事実は、テスト駆動開発の第一人者からテスト駆動インフラと serverspec が認められた、お墨付きを頂けた、ということであると（勝手に）受け止め、本当にうれしかったですね。</p>

<p>登壇の前後でも以下の様なお言葉を頂けて、こちらこそ登壇依頼を頂いて本当に良かったですし、感無量です。ありがとうございました。</p>

<blockquote class="twitter-tweet" lang="en"><p>朝の舞台挨拶を終えました。そして mizzy さんの登壇を実現できただけで感無量なのだなぁ <a href="https://twitter.com/search?q=%23devsumiB&amp;src=hash">#devsumiB</a></p>&mdash; Takuto Wada (@t_wada) <a href="https://twitter.com/t_wada/statuses/433769588715577344">February 13, 2014</a></blockquote>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<blockquote class="twitter-tweet" lang="en"><p>mizzy さん (<a href="https://twitter.com/gosukenator">@gosukenator</a> さん) の話、インフラ技術のこれまでとこれからを語るスケールの大きい話だった。特に後半はワクワクしっぱなしだったな。登壇して頂けて本当に良かった。 <a href="https://twitter.com/search?q=%23devsumiB&amp;src=hash">#devsumiB</a></p>&mdash; Takuto Wada (@t_wada) <a href="https://twitter.com/t_wada/statuses/433781951523069952">February 13, 2014</a></blockquote>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[octorelease という gem をつくった]]></title>
    <link href="http://mizzy.org/blog/2014/01/31/2/" />
    <updated>2014-01-31T23:15:41+09:00</updated>
    <id>http://mizzy.org/blog/2014/01/31/2/</id>
    <content type="html"><![CDATA[
<p>serverspec とか specinfra の <a href="http://serverspec.org/changes.html">Changes</a> を手で書くのがだるくなってきたので、自動化するために <a href="https://github.com/mizzy/octorelease">octorelease</a> という gem をつくりました。</p>

<p>rubygems.org にもあげてあるので、gem install で入ります。</p>

<p>Rakefile の中に</p>

<pre><code class="ruby">require &quot;bundler/gem_tasks&quot;
require &quot;octorelease&quot;
</code></pre>

<p>みたいに書いて、</p>

<pre><code>$ rake octorelease
</code></pre>

<p>すると、 こんな感じになります。</p>

<p><img src="/images/2014/01/rake-octorelease.png"></p>

<p>何をしてるかというと、<code>rake release</code> した後に、前のバージョンとリリースするバージョンの間に含まれるプルリクエストを<code>git log</code>で拾って、各プルリクエストに <code>Released as vX.X.X.</code> とコメントをつけ、GitHub 上にリリースを作成し、リリースの本文にはプルリクエストへリンクを張る、ってなことをやってます。</p>

<p>プルリクへのコメントはこんな感じでつきます。</p>

<p><img src="/images/2014/01/octorelease-comment.png"></p>

<p>これは、プルリクしてくれた人に対して、リリースしたよ、ということを知らせるために、以前から手動でコメントしてたんですが、ルーチンワークなので自動でやるようにしました。</p>

<p>リリースはこんな感じで作られます。</p>

<p><img src="/images/2014/01/octorelease-releases.png"></p>

<p>同僚の <a href="https://github.com/linyows">linyows</a> 作の <a href="https://github.com/linyows/capistrano-github-releases">capistrano-github-releases</a> インスパイアです。</p>

]]></content>
  </entry>


</feed>
