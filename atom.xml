<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Gosuke Miyashita]]></title>
  <link href="http://mizzy.org/atom.xml" rel="self"/>
  <link href="http://mizzy.org/"/>
  <updated>2012-04-24T19:52:36+09:00</updated>
  <id>http://mizzy.org/</id>
  <author>
    <name><![CDATA[Gosuke Miyashita]]></name>
    
  </author>
  <generator uri="https://github.com/mizzy/stellar/">Stellar</generator>


  <entry>
    <title type="html"><![CDATA[nebel で静的サイト作成]]></title>
    <link href="http://mizzy.org/blog/2012/04/24/1/" />
    <updated>2012-04-24T19:52:36+09:00</updated>
    <id>http://mizzy.org/blog/2012/04/24/1/</id>
    <content type="html"><![CDATA[
<p><a href="/blog/2012/04/07/1/">stellar</a> という静的サイトジェネレータをつくっていたのですが、<a href="https://rubygems.org/gems/stellar">名前がモロ被りな gem</a> があったので、<a href="https://github.com/mizzy/nebel">nebel</a> と名前を変更しました。</p>

<p>nebel の方は、静的サイト生成に利用するコマンドと、確認用のテストサーバコマンドのみを含んでいて、実際のサイト生成用のテンプレートやユーティリティツールは、<a href="https://github.com/mizzy/nebel-site">nebel-site</a> の方にあります。(Jekyll と Octopress のような関係です。)</p>

<p>使い方は <a href="https://github.com/mizzy/nebel-site/blob/master/README.md">nebel-site の README</a> にまとめてあるのですが、こちらのブログに日本語でまとめておきます。</p>

<h2>セットアップ</h2>

<p>git clone して、必要な gems を bundle install します。nebel も一緒に入ります。</p>

<pre><code>$ git clone git://github.com/mizzy/nebel-site.git
$ cd nebel-site
$ bundle install
</code></pre>

<h2>ファイルの修正や作成</h2>

<ul>
<li>layouts/post.html

<ul>
<li>エントリのテンプレートなので、適宜修正してください。</li>
</ul></li>
<li>layouts/atom.xml

<ul>
<li>Atom フィードのテンプレートなので、適宜修正してください。</li>
</ul></li>
<li>static/

<ul>
<li>静的ファイル置き場。画像、CSS、JavaScript など、好きなファイルを置いてください。サブディレクトリも作成できます。</li>
</ul></li>
</ul>

<h2>エントリファイルの作成</h2>

<p>以下のような内容でエントリファイルを作成します。ファイル名は、.md か .markdown で終わっていれば、何でもいいです。</p>

<pre><code>---
title: エントリのタイトル
date: 2012-04-24 18:15:59 +0900
---

エントリの本文。Markdown 記法が使えます。
</code></pre>

<h2>nebel コマンドの実行</h2>

<pre><code>$ bundle exec nebel
</code></pre>

<p>nebel コマンドを実行すると、posts 以下のエントリファイルを処理して、生成されたファイルを public 以下に配置します。また、static ディレクトリ以下のファイルもすべて、public 以下にコピーされます。</p>

<h2>テストサーバで確認</h2>

<p>以下のコマンドでテストサーバが立ち上がるので、http://localhost:5000/ にアクセスすると、生成されたコンテンツの確認ができます。</p>

<pre><code>$ bundle exec nebel-server
</code></pre>

<h2>コンテンツの公開</h2>

<p>public ディレクトリ以下のファイルを、お好きなサーバにアップロードしてください。</p>

<h2>ユーティリティツール</h2>

<p>更に便利に利用するためのユーティリティツールも同梱してます。</p>

<h3>エントリファイルの作成</h3>

<p>thor post:create で、エントリファイルを作成します。</p>

<pre><code>$ thor post:create entry-title
</code></pre>

<p>と実行すると、posts/2012-04-24-entry-title.markdown といったファイル名で、以下の様な内容のファイルを作成し、さらにエディタで開いてくれます。(ただし Mac のみ。)</p>

<pre><code>---
title: entry-title
date: 2012-04-24 19:25:34 +0900
---
</code></pre>

<h3>nebel コマンドの自動実行</h3>

<p>同僚の <a href="https://github.com/banyan">@banyan</a> が Guardfile をつくってくれたので、ファイルが変更されると自動的に nebel コマンドを実行して、コンテンツを再生成します。</p>

<pre><code>$ bundle exec nebel-server
</code></pre>

<p><a href="https://github.com/guard/guard-livereload">guard-livereload</a> も利用しているので、ブラウザでの自動リロードにも対応してます。</p>

<h3>テストサーバ起動＆諸々自動化</h3>

<pre><code>$ thor server:start
</code></pre>

<p>を実行すると、以下の一連の処理が自動的に実行されます。</p>

<ul>
<li>テストサーバの起動</li>
<li>ブラウザで http://localhost:5000/ を開く</li>
<li>ファイル変更を検知して自動生成</li>
<li>ブラウザの自動リロード</li>
</ul>

<p>こんな感じで、かなり便利になった。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[Git リポジトリ同期ツールつくった]]></title>
    <link href="http://mizzy.org/blog/2012/04/23/2/" />
    <updated>2012-04-23T19:32:00+09:00</updated>
    <id>http://mizzy.org/blog/2012/04/23/2/</id>
    <content type="html"><![CDATA[
<p>欠勤してるのにブログを書いていて解雇された、という話があったなー、ということを思い出しながら、このエントリを書いてます。(体調悪くて会社休んだ上に、まだ回復してない。)</p>

<p>最近仕事で <a href="https://github.com/">GitHub</a> を利用してるのですが、デプロイも GitHub 経由なため、GitHub がダウンしてしまうと、緊急で直さないといけないバグが発生したりすると困るなー、とか、それ以外にも、バックアップリポジトリがあればいろいろ安心かな、ということで、Git リポジトリを同期するツールをつくってみました。</p>

<p><a href="https://github.com/mizzy/gitpusher">https://github.com/mizzy/gitpusher</a></p>

<p>GitHub の自分のアカウント(または指定された Organization)以下のリポジトリを、すべて <a href="https://bitbucket.org/">Bitbucket</a> に同期する、という動作をします。</p>

<p>今のところ、GitHub から Bitbucket への同期しか対応してませんが、逆方向の対応もそれほど難しくないと思います。</p>

<p>あと、はじめて rubygems.org へアップしてみましたが、あまりにもあっさりアップできてしまったので、作法的な面で正しいのかどうか不安です。</p>

<p><a href="https://rubygems.org/gems/gitpusher">https://rubygems.org/gems/gitpusher</a></p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[stellar-site 用の Guard ファイル作ってもらった]]></title>
    <link href="http://mizzy.org/blog/2012/04/23/1/" />
    <updated>2012-04-23T01:32:00+09:00</updated>
    <id>http://mizzy.org/blog/2012/04/23/1/</id>
    <content type="html"><![CDATA[
<p>同僚の <a href="https://github.com/banyan">@banyan</a> が <a href="https://github.com/mizzy/stellar-site">stellar-site</a> 用に <a href="https://github.com/mizzy/stellar-site/pull/1">Guard ファイルつくってくれた</a>。</p>

<p><a href="https://github.com/guard/guard-livereload">guard-livereload</a> で、ファイル更新されたら勝手にブラウザ側でもリロードしてくれる。</p>

<p>これは便利ですね。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[37歳で大学生になりました]]></title>
    <link href="http://mizzy.org/blog/2012/04/14/1/" />
    <updated>2012-04-14T02:03:00+09:00</updated>
    <id>http://mizzy.org/blog/2012/04/14/1/</id>
    <content type="html"><![CDATA[
<p>この4月に、帝京大学理工学部情報科学科 通信教育課程の第2学年に編入学しました。通信教育課程なんで、仕事は続けたままです。</p>

<p>今日は、なぜこの歳（37歳）で大学に入ろうと思ったのかについて書いてみようと思います。</p>

<p>自分の現在の立ち位置は、ソフトウェアエンジニアだと思っているんですが、出身は経済学部経営学科です。それが悪いとは思ってないですし、そういう人は身近にたくさんいるんですが、情報工学や計算機科学なんかの学位を持ってない、といったことに、ほんの微か、あるかないかぐらいの、引け目なんだかコンプレックスだかなんだかわからないけど、そんなようなものをずっと持ち続けています。</p>

<p>それはあまり意味のないことで、別にそんな感情持つ必要ないじゃん、と思いつつも、ずっとひっかかりはあって、この感情ってこの先ずっと残るのかな、とか思ってたわけですが、だったら学位取っちゃえば、そんなつまらないこと考えずに済むじゃん、とある時ふと思って、<a href="http://logpi.jp/mizzy/permalink/5953120">ログピでつぶやいてみた</a> のが、事の発端。</p>

<p>でも、学位取ろうと思ったのって、このわけのわからないコンプレックスだけが原因じゃなくて、他にも様々な理由があって、それが積み重なった結果、「あ、学位取ろう」って発想が出てきたんだろうな、と思ってます。</p>

<p>自分はこの先一生、ソフトウェアエンジニアとして生きていこうと思っているのですが、そうすると、65歳が定年だとしても、まだ28年もあって、社会人人生の半分にも至っていません。なので、この先もずっとエンジニアとしてやっていこうと思うなら、ここらで一度、基礎体力づくりとして、大学で学んでみるのもいいかな、と思った、というのがもうひとつの理由。</p>

<p>あともうひとつは、ソフトウェアエンジニアとして生きていくなら、今すぐ行きたいというわけではないけど、アメリカに行くことも視野に入れた方がいいのかもしれない、と思ったから。エンジニアがエンジニアらしく生きられる土壌が、向こうにはある気がするんですよね、なんとなくですけど。</p>

<p>それ以外にも、アメリカ行きたい理由はいくつかあって、1年ほど向こうで仕事したことがあるんですが、その時は結婚前の妻と一緒に暮らしていて、とても楽しかったので、また行きたいね、なんてたまに話してたりとか、長男が宇宙が好きで天文学者になりたいと言ってるので、学者になるんなら英語は身につけておいた方がいいだろうし、アメリカなら NASA が身近にあるし、とか、次男が割と重めのアレルギー体質で、アトピーや喘息がひどいんだけど、自分も同じような体質で、経験的に環境が大きく変わると症状が良くなることがあることを知ってるので、もしかしたら次男の体にもいいんじゃないかとか、そういった理由もあったりします。（実際、自分がアメリカで暮らしてたときは、喘息の調子はすこぶる良かった。）</p>

<p>で、たぶん、いずれは行くことになるんじゃないかな、と漠然とは思ってます。それが、今の会社所属のままで行くことになるかもしれないし、全然違うかもしれない。でも、そういったチャンスが来た時に、情報工学の学位を持ってないから、ビザが取得できなくて行けない、なんてハメになったら残念すぎるので、できる限りの準備をしておこう、と思ったから、という理由もあります。</p>

<p>今の会社所属のままで行くことになるなら、おそらくビザの心配はいらないし、アメリカ以外ならそういった学位がなくてもビザ取得できる国もあるらしいとか、アメリカの大学の学位じゃないなら、あまり関係ない、みたいな話も聞いてはいるので、ビザの観点から見たら無駄なことになるかもしれないけど、それでもできることはやっておこう、と思ってます。</p>

<p>そんな理由が積み重なって、ふと「学位取ろう」とつぶやいたのが今年の1月前半で、その時には、別にすぐとは思ってなくて、数年単位でゆっくり考えよう、とか思ってたんですが、このつぶやきを見た妻が、<a href="http://www.amazon.co.jp/dp/4862073735">社会人&amp;学生のための大学・大学院選び 2012年度版</a> という本を買っておいてくれて、この本を読んでたら、あれ、次の4月からの入学、まだ間に合うな、ってことに気づいたので、そのまま一気に進んでいった、という感じです。</p>

<p>と、色々と理由はつけてみたけれど、結局はコンピュータというものが好きで、ただの趣味の延長にすぎない、という気もしないでもないです。要は道楽。</p>

<p>というわけで、これから科目を選んで履修届を出す、という段階で、本格的に学業がはじまってないので、自分が大学に入ったという自覚はまだあまりないんですが、なぜ40歳近くにもなって、大学入ろうと思ったのか、ってことを書いてみました。</p>

<p>またいずれ、大学生と社会人の掛け持ち生活を続けてみて、ぶっちゃけどうなのか、ってな話も書けたらいいな、と思ってます。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[Stellar - A static site generator]]></title>
    <link href="http://mizzy.org/blog/2012/04/07/1/" />
    <updated>2012-04-07T23:22:00+09:00</updated>
    <id>http://mizzy.org/blog/2012/04/07/1/</id>
    <content type="html"><![CDATA[
<p>自宅サーバが死んでから、緊急避難的に <a href="http://octopress.org/">Octopress</a> + GitHub Pages でブログを運用してたけど、Octopress 飽きたし、generate 時間が長いので、一から自分でつくった。</p>

<p><a href="https://github.com/mizzy/stellar">mizzy/stellar</a></p>

<p>まあでもそんな大したものじゃなくて、130行弱の Ruby スクリプトが本体。</p>

<p><a href="https://github.com/mizzy/stellar-site">mizzy/stellar-site</a> のような形で、テンプレやら CSS ファイルやら JavaScript ファイルやら ポスト用 Markdown データやらを用意して、stellar を実行すると、今あなたが見ているこのブログのような形でデータを生成してくれる。</p>

<p>特徴らしきものをあげれば、</p>

<ul>
<li>Jekyll/Octopress で利用していたポスト用 Markdown データがそのまま使える</li>
<li>Jekyll/Octopress で利用していたプラグインがそのまま使える</li>
<li>個別エントリページしか生成しない</li>
</ul>

<p>といったあたり。特に、静的タイプのブログシステムの場合、ひとつファイルを追加するだけで、すべてのページ（複数のエントリを含むページ）を更新しないといけない、というのが、再生成に時間がかかる原因なので、そういったページはなくした。別にそういったものがなくても、Autopagerize で自動的に個別エントリを読みこんでいければ十分。</p>

<p>これで、自分の環境では Octopress で50秒かかっていた再生成時間が、3秒まで短縮できた。</p>

<p>とりあえず自分しか使わない前提でつくったので、色々ハードコートされてたり、使い方とかまとめてないけど、興味のある方がいれば、Pull Request なり Issue 登録なりお気軽にどうぞ。</p>

]]></content>
  </entry>


</feed>
