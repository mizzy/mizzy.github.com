<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Gosuke Miyashita]]></title>
  <link href="http://mizzy.org/atom.xml" rel="self"/>
  <link href="http://mizzy.org/"/>
  <updated>2015-11-04T23:00:03+09:00</updated>
  <id>http://mizzy.org/</id>
  <author>
    <name><![CDATA[Gosuke Miyashita]]></name>
    
  </author>
  <generator uri="https://github.com/mizzy/stellar/">Stellar</generator>


  <entry>
    <title type="html"><![CDATA[フリーランス2年目だけど家を建てることにした 其の3]]></title>
    <link href="http://mizzy.org/blog/2015/11/04/1/" />
    <updated>2015-11-04T23:00:03+09:00</updated>
    <id>http://mizzy.org/blog/2015/11/04/1/</id>
    <content type="html"><![CDATA[
<p>今回は業者選びについて。</p>

<hr>

<h2>スーモカウンターで業者を紹介してもらう</h2>

<p><a href="/blog/2015/07/05/1/">其の1</a>  で書いたように、住宅展示場の営業戦略にはまり、とあるハウスメーカーで話を聞くことになり、家を建てることにしたわけだけど、そのためには業者を選ばないといけない。でも、業者はものすごくたくさんある。<a href="http://www.suumocounter.jp/">スーモカウンター</a> でもらった資料を見ると、200〜300社（でも実際にはもっとありそう）。近所の住宅公園だけでも20社ぐらいあり、そこだけでも全部回るのは時間的に厳しい。そもそもどう選んだらいいのかすらもわからない。</p>

<p>というわけで、<a href="/blog/2015/08/25/1/">其の2</a>  で書いたように、まずはスーモカウンターに行ってみた。</p>

<p>ここで家づくりの基本について教えてもらい、こちらの要望を出して、それにあった業者を4社紹介してもらった。この時出した要望は以下の通り。</p>

<ul>
<li>木造がいい。</li>
<li>将来的に家族の人数が変わって、間取りを変えることを考えると木造軸組が望ましい。</li>
<li>なんとなく大手ハウスメーカーがいい。土地探しや資金の相談にも乗ってくれそう。</li>
<li>手間や時間をかけるより、お金で解決できるならそうしたい。</li>
<li>アレルギー持ちが多いので、ハウスダストとかシックハウスとか花粉とかものすごく気になる。</li>
</ul>

<p>こんな感じで要望を出して、紹介してもらったのが次の4社。</p>

<ul>
<li>国内シェアNo.1のハウスメーカー。ここは鉄骨系と木造系両方を手がけてる。シックハウス対策にかなり力を入れている。（A社）</li>
<li>木造軸組のトップハウスメーカー。自社で山林を保有してる。（B社）</li>
<li>日本でいち早くツーバイフォーを手がけたハウスメーカー。木造軸組じゃないけど、ハウスダストとかシックハウスとか花粉とか気になる、と言ったら、全館空調に強いハウスメーカーということで勧められた。（C社）</li>
<li>地元の工務店。要望の「大手ハウスメーカー」とは違うけど、木の風合いが良いので、木造が希望なら、こちらもどうですか、とスーモカウンタースタッフに勧められた。（D社）</li>
</ul>

<p>これらに追加して、</p>

<ul>
<li>最初に釣られて話を聞いた、純和風テイストが得意の木造軸組のハウスメーカー。（E社）</li>
<li>妻が見てみたいと希望した北米輸入住宅のハウスメーカー。（F社）</li>
<li>同じく妻が希望した北欧輸入住宅のハウスメーカー。（G社）</li>
</ul>

<p>の計7社にまずは絞り込んで、実際に各社に会って話を聞くことに。ちなみにこの段階だと、3〜8社ぐらいに絞るのが平均らしい。</p>

<hr>

<h2>各社との打ち合わせ</h2>

<p>最初に釣られたハウスメーカー以外は、すべてスーモカウンターを通じて日時の調整をしてもらった。で、実際に打ち合わせをしながら更に絞り込んでいく。</p>

<p>ここで大事なのは、事前に予算感を持っておくこと。資金計画についてもスーモカウンターで話を聞くことができて、「借入可能額」（年間所得を元に算出した借入上限額）と「借入希望額」（月々の希望返済額を元に算出した借入額）の計算をしてもらえるので、借入額＋頭金で、総額どれぐらいまで出せるのか、を把握しておくと良い。最初のうちは、土地や建物にどれぐらいお金が必要なのかがさっぱりわからない（そもそも、どれぐらいの広さの土地や建物が必要なのかすらわからない）けど、打ち合わせを進めるにつれ、総予算のうち、土地にこれぐらい、建物にこれぐらいかな、というのがなんとなく見えてくる。</p>

<p>また、ハウスメーカーや工務店によって坪単価が全然違うので、ここだと余裕がありそうだな、とかここだと建てるのは無理かな、みたいなのも早い段階でわかる（お金の話はまた別エントリで詳しく書く予定）。</p>

<p>各社との打ち合わせ後の感想は次のような感じ。</p>

<h3>A社</h3>

<p>シェアNo.1ってのを鼻にかけてる感じがちょっとした。うちを選んで当然でしょ、的な。シックハウス対策にかなり力を入れてることはわかったけど、それ以外はあまり印象に残らなかった。</p>

<h3>B社</h3>

<p>初回打ち合わせから、不動産屋の方も同席して、土地の話なども相談に乗ってもらえた。 </p>

<p>コンピューターシミュレーションで日照や風の通り道なんかを計算して設計に生かす、というのがウリのようで、おもしろそうだけど、春や秋の花粉の時期は外気はシャットアウトしたいので、通風とかは割とどうでもいいんだけどなー、と思った。</p>

<h3>C社</h3>

<p>モデルハウスの外観や間取りや内装がとてもよくて、こんな家に住みたいなー、と思わせてくれた。特に「スキップラウンジ」や「プチリュクス」と呼ばれる空間が気に入って、ぜひ取り入れたいと思った。</p>

<p>担当営業も紳士的で物腰やわらかで、押しつけがましくなくてよかった。</p>

<p>全館空調はスーモカウンターで話を聞くまではノーマークだったけど、話を聞いたらぜひ取り入れたいと思ったし、C社は全館空調を全面的に押していて、実績が豊富なのも良い。</p>

<p>複写で議事録をとって、打ち合わせ終了後にお互い押印して、原本を客側が、コピーをハウスメーカー側が保存、という形になってるのも良い。議事録があると、言った言わないの話になりにくいので。</p>

<h3>D社</h3>

<p>サービスとしてファイナンシャルプランナーを紹介してもらって、無料で相談ができた。それ以外はあまり印象に残ってない。</p>

<h3>E社</h3>

<p>担当営業が新卒2年目で頼りない。1番最初に話を聞いたハウスメーカーなので、最初は悪くないかな、と思ったけど、その後他のハウスメーカーを見たら、ここは全然魅力を感じなくなってしまった。柱の強度がものすごく強い、阪神淡路大震災の2倍の揺れでも大丈夫、ということをひたすら強調してたけど、そこまで強い必要ないし、それ以外に長所はないの、って思った。</p>

<p>担当営業が家まで手紙や手土産を届けに来たり、断った後も理由を聞きに来たりするのが非常に鬱陶しい。</p>

<p>議事録をしっかりとっているのは好印象。</p>

<h3>F社</h3>

<p>女性の方が好むタイプの外観や内装で、他の人の家であれば、素敵な家だなー、と思うんだろうけど、自分が住むとなると、いまいちピンと来なかった。</p>

<p>担当営業はとても印象がよかった。ほとんどのハウスメーカーは1回の打ち合わせで断ったけど、ここは何度か打ち合わせに行ったり、モデルハウスも何カ所か見に行ったりした。</p>

<h3>G社</h3>

<p>営業所長が出てきたけど、イヤな感じだった。説明とかは丁寧ではあるんだけど、なんとなく上から目線な臭いを感じてしまう。</p>

<p>北欧輸入住宅だけあって、断熱性能が高いのが良さそう。だけど、木製のベランダとか手入れがめんどくさそう、木枠の回転する窓は開けにくそうだし、これも手入れがめんどくさそう、と思った。実際はどうだか知らないけど。</p>

<hr>

<h2>打ち合わせを元に業者を絞り込む</h2>

<p>次のステップとしては、3〜5社に絞り込んで、更に打ち合わせを重ねて具体的なプランや見積の精度を上げて比較検討する、というのが標準的らしいんだけど、我が家はこの段階でいきなりC社のみに絞り込んだ。</p>

<p>早々と一社に絞り込んだのは、C社が他と比べて圧倒的に良かったので、これ以上他社との打ち合わせに時間をかけてもあまり意味がなさそうだな、と思ったので。</p>

<p>C社に絞っていたとしても、値引きを引き出すための材料として、他社とも話を進めて相見積をとる、というのが賢いやり方だろうけど、自分はそういうのが苦手だというのもある。相見積の精度を上げるために、複数社と何度も打ち合わせをするのは時間がかかって面倒だな、とも思った。</p>

<p>また、早々と御社に決めました、と言うと、担当営業のモチベーションも上がっていい仕事してくれるんじゃないかな、という狙いもあったり。実際、相見積をとって値下げ交渉したりとか、こちらから値引きを要求したりとかせずとも、かなり値下げしてくれた。担当営業も「他社がこれだけ値引きしてくれたから御社も値引きしてくれ、と言われるよりも、気持ちよく値引きできます」と言っていた。</p>

<p>そんな感じで、総合的に見て他社と比べて圧倒的に良かったのと、いいお客さんを演じることで、先方にも気持ちよく仕事してもらうため（それが結局は自分のためになるので）、C社に絞って更に詳細詰めていくことに。</p>

<p>我が家の業者選びはこんな感じで進んでいった。</p>

<hr>

<h2>業者選びの反省点</h2>

<p>今のところC社を選んだことはまったく後悔しておらず、いい業者を選んだな、と思っているんだけど、それはたまたま結果オーライだっただけで、今思うと、かなり情報収集不足だったな、と思う。たとえば業者の種別についてろくに知らなかった。</p>

<p>業者は大別すると以下の3つにわけられる（もちろん例外もあるけどここでは除外）。</p>

<ul>
<li>工務店</li>
<li>設計事務所</li>
<li>ハウスメーカー</li>
</ul>

<p>それぞれの特徴については、<a href="/blog/2015/08/25/1/">其の2</a> で紹介した <a href="http://www.amazon.co.jp/dp/B00ET0L78Q">マンガ はじめて家を建てました！</a> とか <a href="http://www.amazon.co.jp/dp/4140881224">家づくり必勝法</a> といった本や、<a href="http://chumon-jutaku.jp/knowledge/contractor/" title="注文住宅の依頼先 ／注文住宅のキホン | まるわかり注文住宅">注文住宅の依頼先 ／注文住宅のキホン | まるわかり注文住宅</a> なんかを見てもらえばいいので、ここでは説明しないけど、それぞれどういった人が向いてるか、というのを、「マンガ はじめて家を建てました！」から引用すると次のような感じになる。</p>

<ul>
<li>工務店

<ul>
<li>積極的に家づくりを楽しめる人</li>
<li>自分で内装や外装建材、水回りの商品を探すことを、楽しみに感じられる情熱のある人</li>
</ul></li>
<li>設計事務所

<ul>
<li>独創性のある家づくりをしたいと思ってる人</li>
<li>ゆっくりじっくり取り組める人</li>
<li>お金と時間に余裕を持てる人 </li>
</ul></li>
<li>ハウスメーカー

<ul>
<li>家づくりのための時間と手間ひまをあまりかけたくない人</li>
<li>資金面の相談から受け渡し後のメンテナンスまでいろんなサービスを受けたい人</li>
</ul></li>
</ul>

<p>この分類だと自分はまさにハウスメーカーが向いていて、最初の段階でハウスメーカーに絞ったのは間違いではなかったんだけど、上のような業者種別毎の特徴を抑えていたわけではなく、単になんとなくハウスメーカーがいいかな、と思っていただけだった。</p>

<p>結果的にそれがたまたま正しかったから良かったけど、自分に向いてない業者の中から選定しようとしていたら、なかなか業者が決まらない、とか、決まったけどなんかしっくりこないままずるずる進んでしまう、とか、最悪家づくりに失敗して、もう2度と家を建てようとは思わない、といった結果になったかもしれない。実際  <a href="http://www.amazon.co.jp/dp/4140881224">家づくり必勝法</a>  という本には、そういった事例も紹介されている。</p>

<p>なので、これから家を建てようと思っている人は、業者の種別と、自分がどの種別に向いてるのか、ということを把握するところから始めるのがよさそう。</p>

<p>また、業者選びにかける時間が短すぎたかな、とも思う。家建てるか、と思ったのが4月29日で、業者を一社に絞り込んだのが5月22日なので、業者選定に一ヶ月かかっていないことになる。</p>

<p>我が家の場合は、できる限り早急に今より広い家に移り住みたい、という事情があったから、しかたがない面もあるけど。</p>

<p>以前紹介した本や雑誌も、このわずかな期間に全部読んだわけではなく、業者を絞った後に読んだものもあるけれど、これは業者を絞る前に読むべきだった、と後から思ったものもある。</p>

<p>我が家は行かなかったけど、実際に各ハウスメーカーのお客さんが建てた家の見学会とか、建売前提のモデルハウスとか、建売物件での宿泊体験とかもあるので、そういったものにもできれば行った方が良さそう。住宅展示場のモデルハウスは営業用なので、面積も広いし、外装も内装も高いものを使っており、ハウスメーカー標準の坪単価よりも遙かにお金がかかっていて、まったく参考にならない、というわけではないけど、現実的ではないので。</p>

<hr>

<h2>まとめ</h2>

<ul>
<li>スーモカウンターで業者を紹介してもらった。</li>
<li>どれぐらいの金額を出せるのかを早い段階で把握しておくとよさそう。</li>
<li>最初は7社に絞って各社と打ち合わせした。</li>
<li>その後、3〜5社に絞るのが標準的らしいが、我が家の場合はいきなり1社に絞った。</li>
<li>工務店、設計事務所、ハウスメーカーといった業者種別の違いを理解してて、自分がどの業者種別に向いているかを最初に把握しておくのがよさそう。</li>
<li>我が家は業者選定に時間かけなさすぎなので、真似しない方がいい。</li>
<li>住宅展示場のモデルハウスだけではなく、実際に建てられた家の見学会や、建売前提のモデルハウス、宿泊体験なんかもできれば行った方がよさそう。</li>
</ul>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[第10回 日本 OSS 奨励賞を受賞しました]]></title>
    <link href="http://mizzy.org/blog/2015/10/16/1/" />
    <updated>2015-10-16T23:11:14+09:00</updated>
    <id>http://mizzy.org/blog/2015/10/16/1/</id>
    <content type="html"><![CDATA[
<blockquote>
<p>昨今要求が高まっているシステム配備の自動化の実現に欠かすことができないサーバの状態を自動的にテストするツールServerspecを開発し、インフラ分野における業務の効率化に貢献した。Serverspecは日本国内だけでなく、海外でも活用されている。</p>

<p><a href="http://www.ossforum.jp/ossaward10th2">「第10回 日本OSS貢献者賞・日本OSS奨励賞」受賞者を選定 | 日本OSS推進フォーラム</a></p>
</blockquote>

<p>推薦してくださった方、選考してくださった実行委員会のみなさん、ならびに Serverspec にコントリビュートしてくださったみなさん、使ってくださっているみなさん、ありがとうございます。</p>

<p><a href="http://www.ossforum.jp/ossaward">「日本OSS貢献者賞・日本OSS奨励賞」 | 日本OSS推進フォーラム</a> によると、『「日本OSS奨励賞」は、… ≪中略≫ … さらなる活躍を推奨する … ≪以下省略≫』とのことで、次は貢献者賞に選んでもらえるような実績が残せるよう、精進したいと思います。</p>

<p>受賞者の名に恥じないよう、<a href="http://togetter.com/li/883463">java-ja.OSS</a> で発表したような態度や行動は今後は控えよう…</p>

<p>ちなみに、僕が技術顧問という肩書きをもらっている <a href="http://atl.recruit-tech.co.jp/"> 株式会社リクルートテクノロジーズ アドバンスドテクノロジーラボ</a> では、仕事として OSS の研究開発ができるので、興味がある方はぜひ <a href="http://atl.recruit-tech.co.jp/recruit/">こちらからエントリ</a> を。エントリ前に話を聞いてみたい、という方は、メール、Twitter、Facebook などで声かけてください。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[株式会社リクルートテクノロジーズ Advanced Technology Lab 技術顧問になりました]]></title>
    <link href="http://mizzy.org/blog/2015/10/01/1/" />
    <updated>2015-10-01T11:20:06+09:00</updated>
    <id>http://mizzy.org/blog/2015/10/01/1/</id>
    <content type="html"><![CDATA[
<p>タイトルの通り、10月から <a href="http://atl.recruit-tech.co.jp/">株式会社リクルートテクノロジーズ Advanced Technology Lab</a> の技術顧問になりました。</p>

<p>技術顧問といっても、あまり顧問的な仕事ではないのですが、中の人として活動するにあたって肩書きが必要で、他にわかりやすい名称が思いつかなかったので、技術顧問という肩書きになりました（技術フェローの方が近いかな、という感じだけど、事情によりフェローは使えないので）。</p>

<p>ATL の中の人としての活動ですが、世の中に新しい価値観をもたらすような OSS の研究・開発、言い換えると、Serverspec のような OSS を新たに生み出すのがメインのミッションとなります。</p>

<p>クックパッドの方も業務委託は継続させてもらうので、ATL での研究開発と、クックパッドでの現場運用、双方で良いフィードバックサイクルを回し、お互いにメリットがあるような成果を出していければいいな、と思っています。</p>

<p>また、ATL では現在メンバー募集中ですので、世の中に新しい価値観をもたらすような OSS の研究・開発を仕事としてやりたい、という方は、ぜひ <a href="http://atl.recruit-tech.co.jp/recruit/">こちら</a> からエントリーを。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[フリーランス2年目だけど家を建てることにした 其の2]]></title>
    <link href="http://mizzy.org/blog/2015/08/25/1/" />
    <updated>2015-08-25T03:42:12+09:00</updated>
    <id>http://mizzy.org/blog/2015/08/25/1/</id>
    <content type="html"><![CDATA[
<p>ブログ書くまでが YAPC、ってことで、YAPC でお会いした方々に「家づくりエントリの続き楽しみにしてます」とか「続きまだですか」とか言われたので、其の2を書く（YAPC まったく関係ない）。</p>

<p><a href="/blog/2015/07/05/1/">前回のエントリ</a> のような流れで家を建てることになったわけだけど、それまで家を建てることなどまったく考えたことがなく突然のことだったので、家を建てる流れとかまったく知らず、何をしていいのかさっぱりわからないので、家づくりについて情報を集めることにした。というわけで、今回は、どんな風に情報を集めたかについて書く。</p>

<p>あくまでも自分の場合はこうだった、というだけの話であって、同じやり方を勧めるわけではないので、ご参考まで。</p>

<hr>

<h2>スーモカウンター</h2>

<p>まずインターネット上で検索してみたところ、<a href="http://www.suumocounter.jp/chumon/">スーモカウンター</a> で <a href="http://www.suumocounter.jp/chumon/seminar/">無料セミナー</a> をやっているのを見つけたので、行ってみることにした。セミナーは色々あるけれど、1組様2講座までと書かれているので、<a href="http://www.suumocounter.jp/chumon/seminar/seminar-1/">ダンドリ、お金…初心者必見!土地探しから建てるまで講座</a> と <a href="http://www.suumocounter.jp/chumon/seminar/seminar-3/">どう探す?どう見分ける??工務店・ハウスメーカーの選び方講座</a> を予約して最寄りのスーモカウンターに足を運んだ。</p>

<p>「セミナー」と書かれているので、他にも人がいて座学形式で一方的に話を聞く形式なのかと思っていたら、マンツーマンでこちらが聞きたいことに合わせて説明してくれたり、質問に答えてくれたり、と、セミナーというよりは相談会、という感じだった。というか、<a href="http://www.suumocounter.jp/chumon/service/">無料個別相談会</a> というのも別にあって、内容的にはこれも含まれている、という感じだった。 家づくりに関する基本的なことは、大体ここで抑えられるはず。</p>

<p>相談会では、こちらの要望をヒアリングして、それに合ったハウスメーカーや工務店を紹介してくれ、打合せのセッティングまで行ってくれる。ヒアリングの結果も事前に先方に伝えてくれるので、最初からある程度要望にあった提案を持ってきくれ、打ち合わせもスムーズ。この会社は気に入らないからやめよう、となった場合にも、スーモカウンターが断りの連絡を入れてくれる。</p>

<p>家づくりを進めるにあたって、アサインされる担当営業が非常に重要で、飛び込みでモデルハウスに行ったりすると、暇な（≒使えない）営業や新人などがあたる可能性が高いらしいけど、スーモカウンター経由でセッティングしてもらった場合はそういうことはないらしい。実際、前回のエントリで、飛び込みで話を聞いたハウスメーカーの営業は新卒2年目で、おそらく一生に一度であろう家づくりをこんな若造に任せるのは嫌だな、と思ったけど、スーモカウンターにセッティングしてもらったところは、どこもそれなりに経験や肩書きがある人が出てきてた。また、気に入らない場合には担当営業を変えてもらうこともできるらしい。</p>

<p>これらは全部無料でやってくれるので、とてもいいんだけど、若干面倒なのが、セッティングしてもらった打合せ後には、アンケートに答える必要があること。答えなくてもペナルティとかはなさそうだけど、無料で色々やってくれるので、アンケートぐらいは書かないと申し訳ない気持ちになる。面倒と言っても、ウェブ上で完結するけど。</p>

<p>また、スーモカウンターの担当の人から、どうでしたか、と連絡が来るんだけど、電話じゃなくメールにしてくれ、と言ったにも関わらず、電話がかかってきたりする。電話は全力で無視してたら、メールで連絡が来るようになったけど。</p>

<p>基本的にはすべて無料だけど、ハウスメーカー側は、契約が成立すると紹介料を徴収されるらしい。まあ当然だとは思うけど。とあるハウスメーカーの営業には、紹介料とられちゃうんで、直接来てもらった方がいいんですけどね、と言われた（でもそれ客に言うことじゃないだろ、と内心思った）。</p>

<p>口コミ掲示板なんかでも、ハウスメーカーが負担してる分、こちらが支払う金額に上乗せされてるんじゃないか、という話もあったりするけれど、実際のところはわからない。見積もりからその辺の判断をするのは素人には難しそう。</p>

<p>上乗せされるかどうかは気にせず、てっとりばやく家づくりのために何をしたらいいか知りたい、という方は行ってみるいいと思う。</p>

<p>また、とりあえず話を聞いてお勧めのハウスメーカーや工務店を教えてもらって、スーモカウンター経由ではなく自分でアポイントをとったり、飛び込みでモデルハウスに行く、というのもアリな気もする。その場合はスーモカウンターからの紹介という形ではないので、金額が上乗せされるかどうかを気にする必要がない。ただし、良い担当営業に出会うための努力が必要になるかも。</p>

<hr>

<h2>本や雑誌</h2>

<p>スーモカウンター以外には、本や雑誌で情報収集した。</p>

<p><a href="http://www.amazon.co.jp/dp/B00ET0L78Q"><img src="http://ecx.images-amazon.com/images/I/41akWnkMhKL._SX350_BO1,204,203,200_.jpg" style="height: 350px;" ></a></p>

<p>この漫画は実際の経験を元に書かれていて、とても読みやすく、自分の今のところの経験と照らし合わせても、納得いく内容が多い。ハウスメーカーに依頼してる、という点で自分と同じだし、ハウスメーカーの名前は出てないけど、自分が依頼したのと同じところな気がする（が確証はない）。</p>

<p>2章では、各工法（木造軸組、ツーバイフォーなど）の違い、工務店/建築家（設計事務所）/ハウスメーカーそれぞれに依頼する場合のメリットデメリット、土地探し、資金計画などについてもまとめられていて、家づくりのはじめの一歩として読んでおいて損はなさそう。</p>

<p><a href="http://www.homes.co.jp/cont/press/author/abek/">ウェブ上に同著者によるコラム</a> もある。内容は本に書かれているものもあれば、書かれてないものもある。逆に、コラムに書かれていないもので、本に書かれているものもある。</p>

<p>アサインされる担当営業が非常に重要、と上の方でも書いたけど、できる営業に出会う方法（というよりも、できない営業を避ける方法）なんかも <a href="http://www.homes.co.jp/cont/press/buy/buy_00116/">書かれていて</a> 、スーモカウンターなどを使わず、自分でモデルハウスに足を運ぶ場合には読んでおくとよさそう。</p>

<hr>

<p><a href="http://www.amazon.co.jp/dp/4140881224"><img src="http://ecx.images-amazon.com/images/I/31Q7627D9RL._SX300_BO1,204,203,200_.jpg" style="height: 350px;" ></a></p>

<p>上の「マンガ はじめて家を建てました!」の2章で著者との掛け合い形式で家づくりについて解説している <a href="http://www.hng.ne.jp/blog_ono/?page_id=2">小野 信一氏</a> による書籍。</p>

<p>10年以上前に出版されているけれど、内容的にはそれほど古さを感じないし、不必要に読者の不安を煽らないし、業者側にも施主側にも偏ることなく、中立な立場で書かれていると感じる、とても良い本だった。</p>

<p>これを読んだのは、ハウスメーカーとの打合せも終盤に入り、もうすぐ着工という段階だったけど、一番最初に読むべき本だと思った。</p>

<p>著者は <a href="http://www.nexteyes.co.jp/">ネクスト・アイズ株式会社</a> という、家づくりに関するコンサルティングを行っている会社の代表でもある。</p>

<p>家づくり、経験豊富な人はそうそういないだろうし、失敗した時のダメージがでかいので、こういったコンサルティング会社を使うのも良さそう。ただし、金額はそれなりにする。この会社だと、最初から最後までサポートしてもらう場合のコンサルティング料は、建築請負金額の3%。高いかな、という気もするけど、ローンを組む際にコンサルティング料も見込んでおけば、それほど無理な金額でもないし、安心して家づくりを進められそうなので、もし次に家を建てる機会があれば、利用してみようかと思っている。</p>

<hr>

<p><a href="http://www.amazon.co.jp/dp/4331518027"><img src="http://ecx.images-amazon.com/images/I/51wnTIJ09kL._SX348_BO1,204,203,200_.jpg" style="height: 350px;" /></a></p>

<p>この本では、各ハウスメーカーの特徴や、家づくりを進めるにあたって注意すべきポイントなどが詳しく解説されている。要約すると「ハウスメーカーに騙されないための本」と言えるかも。</p>

<p>第2部は漫画形式になっているけど、なぜか途中から文章だけになっていて、中途半端な印象。でも内容はわかりやすい。</p>

<p>本の性質上、漫画に例として出てくるハウスメーカーや営業などは、ダメな点が協調されてるけど、それに比べると、自分が依頼したハウスメーカーや担当営業は、ものすごくしっかりしてるなー、ということを認識した。</p>

<p>また、例として出てくるハウスメーカー、名前からしても、出てくるモデルハウスの画像とか見積書や契約書の書式なんかを見ても、自分が依頼したハウスメーカーをモデルにしてるっぽい感じがするけど、家づくりの進め方は、我が家のケースとこの本の内容とは全然違っていたので、色々なハウスメーカーをごちゃまぜにしてるのかもしれない。</p>

<p>DVD がついてるけどそれは見てない。</p>

<hr>

<p><a href="http://www.amazon.co.jp/dp/4767809185"><img src="http://ecx.images-amazon.com/images/I/5189rF1pPtL._SX355_BO1,204,203,200_.jpg" style="height: 350px;" /></a>
<a href="http://www.amazon.co.jp/dp/4767816696"><img src="http://ecx.images-amazon.com/images/I/51GOuTd90VL._SX350_BO1,204,203,200_.jpg" style="height: 350px;" /></a>
<a href="http://www.amazon.co.jp/dp/4767818605"><img src="http://ecx.images-amazon.com/images/I/51CZTf1eK0L._SX350_BO1,204,203,200_.jpg" style="height: 350px;" /></a></p>

<p>これら三冊の本は、家の設計に関して、最低限の知識は身につけておいた方が良いかな、と思って読んだ。</p>

<hr>

<p><a href="http://www.amazon.co.jp/dp/B00C0SEQ96"><img src="http://ecx.images-amazon.com/images/I/51sVhMbzMaL._SX346_BO1,204,203,200_.jpg" style="height: 350px;" /></a>
<a href="http://www.amazon.co.jp/dp/4575937290"><img src="http://ecx.images-amazon.com/images/I/51BAAIrq8ML._SX344_BO1,204,203,200_.jpg" style="height: 350px;" /></a></p>

<p>この本は、伊藤理佐さんの漫画が好きなので買ってみた。この漫画では建築家に依頼してるので、ハウスメーカーに依頼してる自分にはあまり参考にはならなかったけど、読み物としては面白い。</p>

<hr>

<p><a href="http://www.amazon.co.jp/dp/4887063040"><img src="http://ecx.images-amazon.com/images/I/91w6wau3OTL.jpg" style="height: 350px;" /></a></p>

<p><a href="http://portalshit.net/2014/12/11/thought-on-own-house">家を建てたので得られた知見を共有します - portal shit!</a> で紹介されていたので読んでみた。自分は建築家や設計事務所に依頼するという形はとらなかったので、参考程度に。</p>

<hr>

<p>他、読んだ雑誌をリストアップ。</p>

<ul>
<li><a href="http://www.amazon.co.jp/dp/4074119803">はじめての家づくり No.26―予算内で家づくりに成功したコツ、教えます ! (別冊PLUS1 LIVING)</a></li>
<li><a href="http://www.amazon.co.jp/dp/B00TIVCCGW">月刊 HOUSING (ハウジング) 2015年 6月号</a></li>
<li><a href="http://www.amazon.co.jp/dp/B00UGMSS6U">月刊 HOUSING (ハウジング) 2015年 7月号</a></li>
<li><a href="http://www.amazon.co.jp/dp/B00TIVBUOM">SUUMO注文住宅 神奈川で建てる 2015年春夏号</a></li>
</ul>

<p>「はじめての家づくり No.26―予算内で家づくりに成功したコツ、教えます !」は、コストを抑えるにはどういった点に気をつければ良いかがまとめられているのはよかった。ただ、タイトルからして、坪単価を抑えた家ばかり紹介されてるのかと思ったけど、安くない、というか、むしろめっちゃ高い、という例も多かった。あと、コストかけない分手間をかける、といった事例が多いけど、自分は面倒くさがりで、多少コストがかかっても手間を省きたい、という考えなので、そういう人間向きの内容ではなかった。</p>

<p>内容は重複するけど、家づくりの基本的なことはどの雑誌にも書かれているので、基礎的な知識の補強には役だったかも。</p>

<p>基礎知識以外だと、実例が豊富に載っているので、広さ、間取り、価格を参考にしたかったけど、子供が5人いる家庭というピンポイントな実例は載ってないのと、写真だけだといまいちピンと来ないのもあって、その辺りを参考にするには、雑誌は厳しいかな、と感じた。広さや間取りを参考にするなら、やはり現物を見るのが良さそう。それについては別の機会に書く予定。</p>

<p>内装や外観なんかは参考になるかも。</p>

<p>知りたい情報をピンポイントで得るには、雑誌はちょっとノイズが多いかな、と感じた。</p>

<p>スーモカウンターにハウスメーカーを紹介してもらった自分にはそれほど役立たなかったけど、自分のお気に入りのハウスメーカーや工務店をじっくり探して、カタログを請求して検討してみる、という方には役立ちそう。</p>

<p>ただ、カタログ請求、自分はこの本からではなく、ウェブ上から何社かやってみたけど、ハウスメーカーによっては、電話かけてきたり、家まで来たりするので、そいうのが嫌いな方は注意が必要。</p>

<hr>

<h2>インターネット</h2>

<p>それ以外の情報としてはもちろん、インターネットで検索もした。けど、断片的に必要な情報拾うぐらい。</p>

<p><a href="http://chumon-jutaku.jp/">まるわかり注文住宅</a> というサイトは後になって知ったけど、ここはよくまとまってる。ただ、情報量が多くてどこから読んだらいいのか迷う。</p>

<p>ピンポイントで知りたいことがあるならインターネットはいいけど、まずは広く浅く情報を集めたい、という段階では、本や雑誌の方が向いてそう。</p>

<p>検索してるとよく出てくる口コミ掲示板があるけど、玉石混交というか誹謗中傷合戦になってるので、参考にはせず暇つぶしに眺める程度。家づくりというのは炎上しやすい題材なんだなー、ということがよくわかる。</p>

<hr>

<h2>まとめ</h2>

<ul>
<li>家づくりに関する情報収集は、スーモカウンター、本、雑誌を利用した</li>
<li>あくまでも自分の場合はこうだった、というだけで、この方法をお勧めするわけではない</li>
<li>自分は時間と手間をあまりかけずに、情報収集やハウスメーカー選びをしたかったので、そういう意味ではスーモカウンターはよかった</li>
<li>情報収集の初期段階で、広く浅く情報を集めるなら、インターネットよりも本や雑誌の方が向いてそう</li>
<li>ローンについての情報収集が足りなかった感はある（が、今のところ特にそれほど困ってはいない）</li>
<li>実際には、上の本や雑誌を最初に一気に読んだわけではなく、各ハウスメーカーとの打合せやモデルハウス巡りと並行しながら読み進めていった</li>
<li>もし次に建てる機会があれば、コンサルティング会社を利用してみたい</li>
<li>他にもお勧めの本や雑誌、ウェブサイトなどあれば、ブコメや Twitter などでぜひ教えてください</li>
</ul>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[フリーランス2年目だけど家を建てることにした 其の1]]></title>
    <link href="http://mizzy.org/blog/2015/07/05/1/" />
    <updated>2015-07-05T23:43:39+09:00</updated>
    <id>http://mizzy.org/blog/2015/07/05/1/</id>
    <content type="html"><![CDATA[
<p>フリーランスのソフトウェアエンジニアでしかも（確定申告的な意味での）実績が1年しかない人間が、ローンを組んで家を建てることになったので、その辺についてシリーズで書いていくことにしようかと。</p>

<p>フリーランスのエンジニアで家を建てた人の話としては、<a href="https://twitter.com/a_matsuda">@a_matsuda</a> さんの  <a href="https://speakerdeck.com/a_matsuda/hacking-home">Hacking (My) Home</a> という素晴らしいスライドがあったり、フリーランスではないけど、同業種のエンジニアが家を建てた話としては、元同僚の <a href="https://twitter.com/morygonzalez">@morygonzalez</a> さんの <a href="http://portalshit.net/2014/12/11/thought-on-own-house">2000 ブクマを超えるエントリ</a> などもあったりするので、併せてどうぞ。</p>

<p>今回は、元々家を持つつもりは一切なくて、一生賃貸でいいや、というか、今後の家族構成の変化（子供が自立して出て行くなど）を考えると、断然賃貸の方がいいだろう、と思っていた人間が、なぜ家を建てることになったのか、そのきっかけになった出来事について。</p>

<p>ゴールデンウィーク中に近所の住宅展示場で、仮面ライダー鎧武をデザインモチーフにした遊具（ボールプールなど）で遊べたり、鎧武と一緒に写真が撮れたりするイベントがあったので、それ目的で子供達を連れて行った。モデルハウスを見るつもりは一切なかった。</p>

<p>住宅展示場では、各社モデルハウスの前で風船を配っていたり、ヨーヨーやスーパーボール掬いがあったりで、子供がおびき寄せられる。なのでしかたなくこちらもモデルハウスに近づく格好になり、中で冷たい飲み物いかがですか、と誘われ、暑いし喉が渇いていたのもあって、中に入って話を聞くことに。</p>

<p>そもそも、子供が5人いて、今の3LDKの賃貸マンションでは手狭でもう限界だな、と思っていて、ここ一年ほど引っ越し先を探していた。けれど、中2の次男が絶対転校したくない、というので、場所の制約があるし、賃貸にしろ買うにしろ、マンションにしろ一軒家にしろ、ファミリー向け物件はほとんどが 3LDK、たまに 4LDK といった感じで、家族7人で住むには狭いし、ごく稀に 5LDK とか 6LDK とかあっても、5階建てでエレベータなしの5階とか、古い家で和室が3つもあって使い勝手が悪いとか、希望の条件に合う物件を見つけるのに難渋していた。</p>

<p>このような状況だったのもあって、ハウスメーカーの人の話を聞いた結果、 今まで考えたこともなかった、家を建てるという選択肢が浮上することになった。というか、希望の条件に合う家に住むには、建てるしか選択肢がなさそうだ、と考えるようになった。</p>

<p>そんな感じで、住宅展示場の子供向けイベントで釣られるという、ハウスメーカーの思惑に見事にハマった形だけど、そういう流れが来てるのだと思うことにして、家づくりを進めることにした（ちなみに、この時話を聞いたハウスメーカーは、その後2回ほど打ち合わせをした後、候補から外した ）。</p>

<p>次回は、家づくりを進めるにあたって、どのように情報収集を行ったかについて書く予定。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[Walter + Wercker + DigitalOcean による Serverspec CI]]></title>
    <link href="http://mizzy.org/blog/2015/06/16/1/" />
    <updated>2015-06-16T21:59:14+09:00</updated>
    <id>http://mizzy.org/blog/2015/06/16/1/</id>
    <content type="html"><![CDATA[
<p><a href="/blog/2015/04/01/1/">フリーランスになって1年が経った</a> というエントリで少しだけ触れた、仕事でも絡んでいる <a href="https://github.com/walter-cd/walter">Walter</a> を自分はどう使っているのか、という話を書きます。</p>

<h2>TL;DR</h2>

<ul>
<li>Serverspec/Specinfra 本体のインテグレーションテストに Walter を <a href="http://wercker.com/">Wercker</a> と組み合わせて利用している</li>
<li>Wercker は並列実行サポートしてないけど、Walter と組み合わせることで並列実行できて便利

<ul>
<li>Docker on CoreOS, CentOS 6.5, CentOS 7.0, Ubuntu 14.04, FreeBSD 10.1 の各 VM を使ったテストを並列で実行してる</li>
</ul></li>
<li>ローカルでも実行できて便利 （Wercker v2 でもできるようになってるけど、Walter の場合は Docker 環境なくてもできる）</li>
</ul>

<h2>Walter + Wercker</h2>

<p>Dogfooding のため、Walter を Wercker と組み合わせて <a href="https://github.com/serverspec/serverspec-integration-test">Serverspec/Specinfra 本体のインテグレーションテスト</a> に使用している。</p>

<p>どのように利用しているかというと、wercker.yml で以下のように walter を実行している。</p>

<pre><code>box: mizzy/serverspec-base@0.0.6
build:
  steps:
    - script:
        name: Run walter
        code: ./$WORKING_DIR/walter -c ./$WORKING_DIR/pipeline.yml
  after-steps:
    - wantedly/pretty-slack-notify:
        webhook_url: $SLACK_WEBHOOK_URL
</code></pre>

<p>Walter の設定が書かれた <a href="https://github.com/serverspec/serverspec-integration-test/blob/master/pipeline.yml">pipeline.yml</a> はこんな感じ（一部抜粋）。</p>

<pre><code>  - name: Make $HOME/.ssh directory
    type: command
    command: mkdir -p $HOME/.ssh
    only_if: test &quot;$WERCKER&quot; = &quot;true&quot;
  - name: Put SSH publick key
    type: command
    command: echo &quot;$DIGITALOCEAN_SSH_KEY_PUBLIC&quot; &gt; $HOME/.ssh/id_rsa.pub
    only_if: test &quot;$WERCKER&quot; = &quot;true&quot;
</code></pre>

<p>Walter を使うと、手元でも Wercker 上でも同じ処理が実行できるので、リポジトリを push しなくても設定通りに動くか確認できるので便利。とは言え、手元と Wercker 上では微妙に処理内容が異なったりするので、そいう場合は上のように <code>only_if</code> で Wercker 上かそうじゃないかを判断してコマンドを実行したりしている。</p>

<p>Wercker v2 でも手元でテストできるけど Docker 使うし、Serverspec/Specinfra のインテグレーションテストは性質上 Docker 不要なので、間に入るレイヤーが一段少ない、という意味で Walter でやる方が個人的には楽。</p>

<h2>並列実行</h2>

<p>実際にテストを走らせるところは、DigitalOcean 上に各 OS 毎に VM を立ててテストしており、以下のように記述することで並列実行している。</p>

<pre><code>  - name: Parallel builds each OSes
    parallel:
      - name: Build CoreOS
        type: command
        directory: $WORKING_DIR
        command: vagrant up coreos --provider=digital_ocean &amp;&amp; ./apply-itamae-and-serverspec-to-docker.sh
        only_if: test &quot;$WERCKER_GIT_REPOSITORY&quot; != &quot;serverspec&quot;
      - name: Build CentOS 6.5
        type: command
        command: vagrant up centos65 --provider=digital_ocean &amp;&amp; bundle exec itamae ssh --host centos65 --vagrant recipe.rb \
          &amp;&amp; DIGITALOCEAN=true rake spec:centos65
        directory: $WORKING_DIR
      - name: Build CentOS 7.0
        type: command
        command: vagrant up centos70 --provider=digital_ocean &amp;&amp; bundle exec itamae ssh --host centos70 --vagrant recipe.rb &amp;&amp; \
          DIGITALOCEAN=true rake spec:centos70
        directory: $WORKING_DIR
      - name: Build Ubuntu 14.04
        type: command
        command: vagrant up ubuntu1404 --provider=digital_ocean &amp;&amp; bundle exec itamae ssh --host ubuntu1404 --vagrant recipe.rb \
          &amp;&amp; DIGITALOCEAN=true rake spec:ubuntu1404
        directory: $WORKING_DIR
      - name: Build FreeBSD 10.1
        type: command
        command: vagrant up freebsd --provider=digital_ocean &amp;&amp; DIGITALOCEAN=true rake spec:freebsd
        directory: $WORKING_DIR
</code></pre>

<p>CoreOS, CentOS 6.5, CentOS 7.0, Ubuntu 14.04, FreeBSD 10.1 の VM を DigitalOcean 上で起動し、<a href="http://itamae.kitchen/">Itamae</a> でプロビジョニングし、Serverspec でテストを実行している。</p>

<p>直列に実行すると Wercker の制限時間内（たしか25分だったかな）に終わらないけれど、Walter を利用して並列実行することで、時間内に完了している。</p>

<p>Wercker でテストしたログがどんな感じかは <a href="https://app.wercker.com/#buildstep/55801d169e5d0cdb4600d0dd">こちら</a> で参照できる。これを見てもらうとわかるように、並列実行している部分は、以下のスクショのようになっていて見づらい。</p>

<p><img src="/images/2015/06/wercker.png" alt="Walter + Wercker" style="width: 100%;" /></p>

<p>テストがすべて通った場合はいいけど、失敗した場合はどこで失敗してるのかが探しにくい。これは次に紹介する、Slack 通知と組み合わせることで解決している。</p>

<h2>Slack 通知</h2>

<p>Walter には Slack や HipChat に通知する機能が組み込まれている。</p>

<p>ビルドの各フェーズを Walter では「ステージ」と呼んでいるが、以下のように、ステージ毎の結果を通知するようになっている。</p>

<p><img src="/images/2015/06/walter-success.png" alt="Walter + Wercker with Slack" style="width: 50%;" /></p>

<p>失敗したステージは以下のように赤く表示される。</p>

<p><img src="/images/2015/06/walter-fail.png" alt="Walter with Slack" style="width: 50%;" /></p>

<p>この例だと CoreOS 上の Docker コンテナに対するテストが失敗してることがわかるので、一番下の Wercker による通知のリンクを踏んでビルドページに飛び、CoreOS 部分のみに絞り込んで失敗した原因を調べることができる。</p>

<h2>今後の展望</h2>

<p>今のところ、Wercker との組み合わせは自分にとって十分なので、今後は Jenkins なんかと組み合わせて、必要な機能があれば追加していこうかな、などと考えている。</p>

<p>また、Wercker や Jenkins との組み合わせではなく、単体でも利用できるようにしたい、と目論んでいるが、そのための機能はまだまだ不足している。</p>

<p>直近では、結果を集約するサーバが必要だと感じており、walter-server 的な何かを開発しようと目論んでいるんだけど、イメージ的には <a href="https://github.com/ukigumo/Ukigumo-Server">Ukigumo-Server</a> が近い、というか、パクらせてもらおうと考えている。</p>

<h2>最後に</h2>

<p>Walter は <a href="https://github.com/walter-cd/walter">GitHub で公開されている</a> ので、興味ある方はぜひ。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[フリーランスになって1年が経った]]></title>
    <link href="http://mizzy.org/blog/2015/04/01/1/" />
    <updated>2015-04-01T09:00:00+09:00</updated>
    <id>http://mizzy.org/blog/2015/04/01/1/</id>
    <content type="html"><![CDATA[
<p><a href="http://mizzy.org/blog/2014/04/01/1/">4月からクックパッドで仕事してます</a> というエントリを書いてからちょうど1年経ったので振り返ってみる。</p>

<h2>フリーランスになった経緯</h2>

<p>そもそも最初からフリーランスになるぞ、と思ってなったわけではなく、なんとなく流れにしたがってたらフリーランスになってた。</p>

<p>もう少し詳しい経緯。色々あって2014年3月に無職（有給消化中のファッション無職じゃなくガチ無職）になって、普通に正社員として次の会社を探していて、知り合いに声をかけて話を聞いて回っていた。その中でクックパッドに決めたのは、<a href="https://twitter.com/hotchpotch">セコンさん</a> や <a href="https://twitter.com/mirakui">mirakui さん</a> の、これからクックパッドの技術やインフラをこうして行きたい、という思いや考えに共感し、そこに自分が価値を提供できるイメージが具体的に沸いたから。</p>

<p>ただ、事情があって最初から正社員ではなく、お互い様子見ということで、正社員になる前提で半年間業務委託契約という形で仕事してみましょう、ということになり、半年どころか一ヶ月経たないうちに、正社員よりも業務委託の方が自分にあってるな、と思ったので、そのままフリーランスで行くことにした。</p>

<p>（この辺りは <a href="http://rebuild.fm/75/">Rebuild: 75: Book Driven Development</a> でも少し話した気がする）</p>

<p>Serverspec という代表的プロダクトを持ったから独立したんじゃないか、みたいに言われたり思われたりするけれど、実際は上に書いたとおり、フリーランスになろうなんてことはまったく考えていなかったけれど、流れにしたがって気づいたらフリーランスになってた、というのが正解。Serverspec の存在はまったくの偶然。とはいえ、Serverspec の存在はフリーランスという立場にとって非常に強力な武器になっていることは確か。</p>

<h2>仕事のスタイル</h2>

<p>メインはクックパッドで週4日、10:00-18:00 の間オフィスで仕事をしている。前職の頃は定時が 10:00-19:00 だったので1時間短い。火曜日は基本的に家で、クックパッド以外に請け負っている仕事をしている。火曜日に家にいる理由は、娘の習い事の送り迎えが夕方にあるため。あと、夜や土日にも仕事絡みでコード書いたりもしてるけど、それはフリーランスになる以前からやってる。元々、仕事と趣味の境目が曖昧だし。仕事内容も、前職でやっていたようなマネージメント的な仕事は一切なく、技術的な仕事のみ。</p>

<p>「クックパッド以外に請け負っている仕事」というのは、具体的には今はリクルートテクノロジーズの案件を受けていて、<a href="https://github.com/walter-cd/walter">Walter</a> や <a href="https://prevs.io/">prevs.io</a> の開発に関わっている（prevs.io の方は一旦3月で契約終了となったけど）。</p>

<p>基本的にオフィス勤務なので、家族や自分が病気だったり、別の仕事の打合せとか海外のカンファレンスに行く時なんかは休まざるを得ないんだけど、休んだ分業務委託料から引かれるということもなく、非常にありがたいけれど、申し訳ないな、と思いつつ、そのご厚意に甘えさせてもらっている。特に、子供が5人と多いので、どうしても家庭の事情での休みが多くなるんだけど、その辺の事情も理解してもらっていて、とても助かっているし、今後はリモートでも仕事ができるよう取りはからってくれていて、非常にありがたいです。なので感覚としては、クックパッドの業務を請け負っているというよりも、自分のフリーランスとしての働き方を、クックパッド（というかセコンさんや mirakui さん）にスポンサードしてもらっている、というのが近いかな、と思っていたりする。</p>

<p>リクルートテクノロジーズの案件は完全にリモートで、最初の打合せの時以外は、すべて Slack や GitHub でやりとりしている。</p>

<p>こんな感じのスタイルで仕事してますが、今後はフリーランスらしく、更にリモートワークの割合を増やしたり、年に一度は沖縄でリゾートワークしたり、子供達の夏休みにあわせて8月はまるっと休んだり、<a href="http://www.konami.jp/mgs5/tpp/jp/">MGSV:TPP</a> が発売される9月も休もうか、などと計画してる。</p>

<p>仕事の契約面についても、クックパッドもそれ以外のところも、厳密な納品物が定められていない契約になっていて、毎月請求書を出して、決裁権者が承認してくれさえすればそれで支払われるので、納期に追われるということもなく、自分のペースで仕事をさせてもらっている。</p>

<h2>収入について</h2>

<p>フリーランスになった経緯とか仕事のスタイルとかどうでもいいから、ぶっちゃけ収入どうなんだ、ってのがみんな知りたいところだと思う。</p>

<p>昨年は1,2月は前職に在籍していたし、3月は無職だったし、4月からの半年は、正社員になること前提で、前職の収入をベースとした金額で業務委託料をもらっていたりで、トータルで前職の年収の1.4倍ぐらいの収入だったけど、今年は1月〜6月の半年の収入で、前職の年収の1.2倍ぐらいになる見通し。通年だと前職の年収の2.5倍ぐらいになりそう。その分税金もがっつり持っていかれるけど。</p>

<p>具体的な金額はパブリックなところに書くと色々めんどくさそうなので書かないけど、知りたい人は会った時にでも直接聞いてもらったら答えます。</p>

<h2>まとめ</h2>

<p>フリーランス、技術的な仕事だけしていても、マネージメントしてた頃より収入いいし、実稼働時間減ったりリモートで働ける時間増えたりで家族といる時間増えたし、そもそもクリティカルな部分は任されないので、セキュリティインシデントが発生して徹夜対応、みたいなこともなくて気楽だけど、いつまでこの状態が続くのか、みたいな不安もないことはないし、自分の立ち位置はフリーランスの中でも割と特殊な方だと思うので、他人にはお勧めしない。</p>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[2014年の振り返り]]></title>
    <link href="http://mizzy.org/blog/2014/12/31/1/" />
    <updated>2014-12-31T00:36:46+09:00</updated>
    <id>http://mizzy.org/blog/2014/12/31/1/</id>
    <content type="html"><![CDATA[
<p>面倒なので簡単に。</p>

<h2>やったこと</h2>

<ul>
<li>Serverspec が Black Duck Open Source Rookies of the Year 2013 に選ばれた（2013 だけど発表は 2014 年だった）。</li>
<li>Serverspec の論文書いた。</li>
<li>Developers Summit 2014 で登壇した。</li>
<li>フリーランスになった。</li>
<li>#ChefConf 2014 で登壇した。</li>
<li>WEB+DB PRESS に寄稿した。</li>
<li>July Tech Festa 2014 で基調講演やった。</li>
<li>Serverspec 本（通称アホ毛本）で単著デビュー（発売は来年だけど）。</li>
</ul>

<h2>よかったこと</h2>

<ul>
<li>論文執筆とか、WEB+DB PRESS への寄稿とか、US のカンファレンスで登壇とか、やれたらいいなー、と思ってたことがいくつか実現できた。</li>
<li>単著デビュー、しかもオライリーから、しかも自分が開発したOSSをネタに、というのは、想像すらしたことなかった。</li>
<li>流れでフリーランスになったけど、今のところ自分に合ってるし、実働時間減って収入はかなり上がった。</li>
</ul>

<h2>よくなかったこと</h2>

<ul>
<li>執筆業に集中したため、大学の方は2教科4単位しか取得できなかった。</li>
<li>自家感作性皮膚炎を発症して辛かった。</li>
</ul>

<h2>来年やりたいこと</h2>

<ul>
<li>大学の単位取る。</li>
<li>もっとフリーランスっぽく、リモートワーク増やしたい。</li>
</ul>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[「Serverspec」という本が出ます]]></title>
    <link href="http://mizzy.org/blog/2014/12/25/1/" />
    <updated>2014-12-25T10:00:00+09:00</updated>
    <id>http://mizzy.org/blog/2014/12/25/1/</id>
    <content type="html"><![CDATA[
<p>ここ半年ほど取り組んでいた Serverspec に関する本が出ます。2015年1月17日発売予定です。</p>

<p><a href="http://www.oreilly.co.jp/books/9784873117096/"><img src="http://www.oreilly.co.jp/books/images/picture_large978-4-87311-709-6.jpeg" style="width: 30%;" /></a></p>

<p><a href="http://www.oreilly.co.jp/books/9784873117096/">O&#39;Reilly Japan - Serverspec</a></p>

<p><a href="http://www.amazon.co.jp/dp/4873117097">Amazon.co.jp： Serverspec: 宮下 剛輔: 本</a></p>

<p>どんな内容か、というのは、サイトの紹介文や目次を見ればわかるので、ここでは、なぜこの鳥が表紙に選ばれたのか、といったことでも書こうかな、と思ったんですが、こういうのは明かさない方がおもしろいので、やっぱり書かないことにします。おそらく、何という名前の鳥なのかすらわからない方が大半かと思いますが、あえて伏せておきます。名前や生態は最後のページに載っていますので、知りたい方は買うなり、店頭で確認するなりしてみてください（妻が Facebook に名前を書いちゃってるけど）。</p>

<p>本書は、開発者である自分にしか書けないことをできる限り盛り込み、自分以外の人でも書けるようなことはなるべく省く、というスタンスで書いています。</p>

<p>したがって、Serverspec と密接に関連する、Infrastructure as Code、テスト駆動インフラやインフラ CI、Puppet や Chef といったサーバ構成管理ツール、Ruby や RSpec、Vagrant などについては詳しく解説せずに、参考となるサイトや書籍等を紹介するのみにとどめています。</p>

<p>Serverspec 自身の使い方についても、<a href="http://serverspec.org/">オフィシャルサイト</a> にあるのと同程度のことしか書いていないので、基本的な使い方を懇切丁寧に解説している、といったような内容を期待されている方は、本書内でも紹介している <a href="http://gihyo.jp/book/2014/978-4-7741-6768-8">サーバ/インフラ徹底攻略</a> の <a href="https://twitter.com/naoya_ito">naoya</a>  さんや自分の記事を読んで頂く方が良いです。</p>

<p>その代わり、開発に至る経緯や開発する上での哲学、動作仕様や内部のアーキテクチャ、ソースコードレベルでの拡張方法など、表から見ただけではわからないようなことをふんだんに盛り込んでいます。</p>

<p>Serverspec について詳しく解説するということは、必然的に <a href="https://github.com/serverspec/specinfra">Specinfra</a> のことも詳しく解説することになるわけですが、ドキュメントがまったくない Specinfra についても、ソースコードレベルで詳しく解説していますので、Specinfra をベースに Serverspec や <a href="https://github.com/ryotarai/itamae">Itamae</a> とは違う何かをつくってみたい、という方にもお勧めです。</p>

<p>Serverspec は「ひとつのことをうまくやれ」という UNIX 哲学に基づき、できる限りシンプルに保つようにしています。そのシンプルさの裏には、6年の歳月（Serverspec の前身となるツールは2007年につくっていた）、様々な思考、試行といったものがあります。そういった Serverspec の裏の部分に興味のある方は、ぜひ手にとってみてください。</p>

<p>本書の構成は以下の通りですので、購入するかどうかの検討材料にどうぞ。</p>

<blockquote>
<p>1章はServerspecが生まれた背景や、Serverspecとはそもそも何か、その利用目的は、といった概要の説明、Serverspec開発における哲学など、Serverspecの概要を俯瞰した内容となっています。</p>

<p>2章ではServerspecの基本的な使い方を通じて、Serverspecのエッセンスについて紹介しています。</p>

<p>3章ではServerspecを実践で利用するにあたって必要となる知識やテクニックについて解説しています。</p>

<p>4章ではソースコードを元に、Serverspecの内部や、拡張方法について詳しく解説しています。</p>

<p>5章ではServerspecと組み合わせることで、より便利に活用できるツールを紹介しています。</p>

<p>6章ではServerspecを使用していて問題に遭遇した場合に、調査すべきポイントについて解説しています。</p>

<p>7章ではServerspecの今後について、筆者の考えを述べています。</p>

<p>付録では、リファレンスとして活用するのに便利なリソースタイプ一覧、v2での変更点、Serverspecが強く依存しているSpecinfraというライブラリの、Serverspec以外の利用例、Windows OSのテスト方法を解説しています。</p>
</blockquote>

<p><a href="https://twitter.com/naoya_ito">naoya</a> さんによる「まえがき」もありますよ。</p>

<p>それにしても、本を一冊書き上げるのって大変ですね。執筆のストレスのせいか、自家感作性皮膚炎を発症し、全身痒くて眠れない日が何日か続いたりして大変でした。</p>

<blockquote class="twitter-tweet" lang="en"><p>全身痒くて眠れないので修羅の門 第弐門をKindleで買って読んでる。</p>&mdash; Gosuke Miyashita (@gosukenator) <a href="https://twitter.com/gosukenator/status/516652343245299713">September 29, 2014</a></blockquote>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

]]></content>
  </entry>

  <entry>
    <title type="html"><![CDATA[Dockerコンテナに入るなら SSH より nsinit が良さそう]]></title>
    <link href="http://mizzy.org/blog/2014/06/22/1/" />
    <updated>2014-06-22T19:21:44+09:00</updated>
    <id>http://mizzy.org/blog/2014/06/22/1/</id>
    <content type="html"><![CDATA[
<h2>追記</h2>

<p><a href="http://b.hatena.ne.jp/entry/mizzy.org/blog/2014/06/22/1/">はてブでつっこみもらいました</a> が、実行するカレントディレクトリは /var/lib/docker/execdriver/native/$id を使うのが正しいようです。（情報読み違えてた。）こちらには <code>container.json</code> があるので、ソースツリーからコピーしてくる必要ないですね。</p>

<p>また、コンテナ ID 取得は、<code>docker ps -q --no-trunc</code> の方が良い、とも教えていただきました。</p>

<p>つっこみにしたがって、最後の方の説明とシェル関数書き換えました。</p>

<p>つっこみありがとうございます！</p>

<hr>

<h2>tl; dr</h2>

<p>タイトルまま</p>

<hr>

<h2>経緯</h2>

<p>Docker でつくったコンテナの中に入って状態を確認するために、コンテナ内で sshd を立ち上げてアクセスする、ってなことを以前やってたんですが、コンテナ内で sshd を立ち上げる、というやり方がいまいちだし、そもそもコンテナの仕組みから考えれば、別に sshd を立ち上げなくても、コンテナと同じ namespace と rootfs に bash なりのプロセスを閉じ込めてやれば良いわけで、そういったことは既に考えている人はいるだろうし、ツールとかありそうだな、ってことで、</p>

<blockquote class="twitter-tweet" lang="en"><p>Dockerで中を見たいコンテナのPID namespaceとchrootをカレントシェルに割り当てることが簡単にできるようなツールがあれば、中でsshとか立てなくていいかな。</p>&mdash; Gosuke Miyashita (@gosukenator) <a href="https://twitter.com/gosukenator/statuses/479289206108217344">June 18, 2014</a></blockquote>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>とつぶやいてみたら、</p>

<blockquote class="twitter-tweet" data-conversation="none" lang="en"><p><a href="https://twitter.com/gosukenator">@gosukenator</a> nsenter -- chroot /bin/bash とかでいけないですかねー</p>&mdash; TenForward (@ten_forward) <a href="https://twitter.com/ten_forward/statuses/479297375115042817">June 18, 2014</a></blockquote>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>と、nsenter なるものの存在を教えて頂いた。</p>

<blockquote class="twitter-tweet" data-conversation="none" lang="en"><p><a href="https://twitter.com/gosukenator">@gosukenator</a> nsenter はちょっと新しい util-linux にしかないので、ソースからコンパイルする必要あると思います。&#10;RHEL/CentOS7 は知らないですけど、Ubuntu 14.04 にはありませんでした。</p>&mdash; TenForward (@ten_forward) <a href="https://twitter.com/ten_forward/statuses/479297956969869312">June 18, 2014</a></blockquote>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>で、これを見るとちょっと面倒かな、と思ったけど、</p>

<blockquote class="twitter-tweet" data-conversation="none" lang="en"><p><a href="https://twitter.com/gosukenator">@gosukenator</a> docker 的にはそのページに書かれている nsinit を使うのが正解かもしれませんね。docker のソースツリーに入ってるツールですし :-)&#10;(nsinit すっかり忘れてた)</p>&mdash; TenForward (@ten_forward) <a href="https://twitter.com/ten_forward/statuses/479304239584251904">June 18, 2014</a></blockquote>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>この nsinit は golang 製なので、golang が動く環境であれば go get で入れることができて楽そうなので、nsinit を試してみることにした。</p>

<hr>

<h2>nsinit の使い方</h2>

<p>golang 環境は既に整っていて、GOPATH が設定されていて、PATH に $GOPATH/bin が含まれている、という前提。</p>

<p><code>go get</code> で <code>nsinit</code> を入れる。</p>

<pre><code>$ go get github.com/docker/libcontainer/nsinit
</code></pre>

<p>こんな感じで実行。</p>

<pre><code>$ sudo -s
# docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
917756ba04a2        ubuntu:14.04        /bin/bash           51 minutes ago      Up 51 minutes                           lonely_tesla
# cd /var/lib/docker/execdriver/native/9177*
# nsinit exec /bin/bash
daemon@koye:/$
</code></pre>

<p>cd して nsinit、ってやるのは、一般ユーザからだとパーミッションの関係でタブ補完が効かなくてだるいので、シェル関数書いてみた。</p>

<pre><code>docker-attach()
{
  id=`sudo docker ps -q --no-trunc $1`
  root=/var/lib/docker/execdriver/native/$id
  sudo sh -c &quot;cd $root &amp;&amp; $GOPATH/bin/nsinit exec $2&quot;
}
</code></pre>

<p>この関数つかって、コンテナIDと実行するプログラムを与えれば、一発でコンテナの中に入れて便利。</p>

<pre><code>vagrant@vagrant:~$ docker-attach 9177 /bin/bash
daemon@koye:/$
daemon@koye:/$ ps -ef
UID        PID  PPID  C STIME TTY          TIME CMD
daemon       1     0  0 10:38 ?        00:00:00 /bin/bash
daemon      14     1  0 10:44 ?        00:00:00 ps -ef
</code></pre>

]]></content>
  </entry>


</feed>
